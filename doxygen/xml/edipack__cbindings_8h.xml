<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="edipack__cbindings_8h" kind="file" language="C++">
    <compoundname>edipack_cbindings.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">complex.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h</label>
        <link refid="edipack__cbindings_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>complex.h</label>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="edipack__cbindings_8h_1af0dd1edd01df6f6dccd5c7fb5bb4c9a8" prot="public" static="no" extern="yes" mutable="no">
        <type>int</type>
        <definition>int has_ineq</definition>
        <argsstring></argsstring>
        <name>has_ineq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This flag is <computeroutput>1</computeroutput> if real-space DMFT support enabled, <computeroutput>0</computeroutput> otherwhise </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="16" column="12" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="16" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a9424343761f8c4f4c1afe8f5b6bf471b" prot="public" static="no" extern="yes" mutable="no">
        <type>double</type>
        <definition>double beta</definition>
        <argsstring></argsstring>
        <name>beta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Inverse temperature. 
Interfaces to :f:var:`beta`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="24" column="15" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="24" declcolumn="15"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1ad1e352bfdf2f1edd866901c6827ee1a5" prot="public" static="no" extern="yes" mutable="no">
        <type>bool</type>
        <definition>bool chidens_flag</definition>
        <argsstring></argsstring>
        <name>chidens_flag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Flag to activate charge susceptibility evaluation.
Interfaces to :f:var:`chidens_flag`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="32" column="13" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="32" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1ae8058fea3a4b4ab62975b4de3cde00c6" prot="public" static="no" extern="yes" mutable="no">
        <type>bool</type>
        <definition>bool chiexct_flag</definition>
        <argsstring></argsstring>
        <name>chiexct_flag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Flag to activate exciton susceptibility evaluation.
Interfaces to :f:var:`chiexct_flag`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="40" column="13" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="40" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a58ef1fc1afab4547b7b6900e88ed7125" prot="public" static="no" extern="yes" mutable="no">
        <type>bool</type>
        <definition>bool chipair_flag</definition>
        <argsstring></argsstring>
        <name>chipair_flag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Flag to activate pair susceptibility evaluation.
Interfaces to :f:var:`chipair_flag`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="48" column="13" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="48" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a94ce4059de19ab8b48859aca79690cc7" prot="public" static="no" extern="yes" mutable="no">
        <type>bool</type>
        <definition>bool chispin_flag</definition>
        <argsstring></argsstring>
        <name>chispin_flag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Flag to activate spin susceptibility evaluation.
Interfaces to :f:var:`chispin_flag`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="56" column="13" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="56" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a058cde9e32ea18e1b166b8bcf20fbb3f" prot="public" static="no" extern="yes" mutable="no">
        <type>double</type>
        <definition>double dmft_error</definition>
        <argsstring></argsstring>
        <name>dmft_error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Convergence threshold. 
Interfaces to :f:var:`dmft_error`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="64" column="15" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="64" declcolumn="15"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a179ae07c9e10b47eb1e3a2a2d3087d28" prot="public" static="no" extern="yes" mutable="no">
        <type>bool</type>
        <definition>bool ed_twin</definition>
        <argsstring></argsstring>
        <name>ed_twin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Twin sector simmetry flag. 
Interfaces to :f:var:`ed_twin`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="72" column="13" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="72" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a1a4f0db143dd9d1c071355af43cd215b" prot="public" static="no" extern="yes" mutable="no">
        <type>bool</type>
        <definition>bool ed_total_ud</definition>
        <argsstring></argsstring>
        <name>ed_total_ud</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Flag setting orbital-resolved sectorization of Fock space Hamiltonian. 
Interfaces to :f:var:`ed_total_ud`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="80" column="13" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="80" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a974b448c3d0a13d483d36ef15de369b5" prot="public" static="no" extern="yes" mutable="no">
        <type>double</type>
        <definition>double eps</definition>
        <argsstring></argsstring>
        <name>eps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Real axis broadening. 
Interfaces to :f:var:`eps`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="88" column="15" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="88" declcolumn="15"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1acaab22633fac5225c9c5838463e8741a" prot="public" static="no" extern="yes" mutable="no">
        <type>double</type>
        <definition>double Jh</definition>
        <argsstring></argsstring>
        <name>Jh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Hund&apos;s coupling. 
Interfaces to :f:var:`Jh`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="96" column="15" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="96" declcolumn="15"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a5f4d6ca721a318bce7d17c61b8d89e41" prot="public" static="no" extern="yes" mutable="no">
        <type>double</type>
        <definition>double Jp</definition>
        <argsstring></argsstring>
        <name>Jp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Pair-hopping interaction strength. 
Interfaces to :f:var:`Jp`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="104" column="15" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="104" declcolumn="15"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a56f382711dc8d2a0a46aaaf5ceeacfb1" prot="public" static="no" extern="yes" mutable="no">
        <type>double</type>
        <definition>double Jx</definition>
        <argsstring></argsstring>
        <name>Jx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Spin-exchange interaction strength. 
Interfaces to :f:var:`Jx`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="112" column="15" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="112" declcolumn="15"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1ab484dfd3c277a72c3f1b792e5ed6ed38" prot="public" static="no" extern="yes" mutable="no">
        <type>int</type>
        <definition>int Lfit</definition>
        <argsstring></argsstring>
        <name>Lfit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Number of frequencies used in :math:`\chi^{2}` fit. 
Interfaces to :f:var:`Lfit`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="120" column="12" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="120" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a17fe451d3a3d637b023c8bcc5234560e" prot="public" static="no" extern="yes" mutable="no">
        <type>int</type>
        <definition>int Lmats</definition>
        <argsstring></argsstring>
        <name>Lmats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Number of Matsubara frequencies. 
Interfaces to :f:var:`Lmats`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="128" column="12" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="128" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a7f187f30f4f740a6729de02aa7bd0675" prot="public" static="no" extern="yes" mutable="no">
        <type>int</type>
        <definition>int Lreal</definition>
        <argsstring></argsstring>
        <name>Lreal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Number of real frequencies. 
Interfaces to :f:var:`Lreal`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="136" column="12" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="136" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a09c1c7cda21c1df40a7e50bd8be1221b" prot="public" static="no" extern="yes" mutable="no">
        <type>int</type>
        <definition>int Lpos</definition>
        <argsstring></argsstring>
        <name>Lpos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Number of points in Probability Distribution Function lattice for phonons. 
Interfaces to :f:var:`Lpos`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="144" column="12" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="144" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a263691cebfbf1977e8c92b4cdae0a24d" prot="public" static="no" extern="yes" mutable="no">
        <type>int</type>
        <definition>int Ltau</definition>
        <argsstring></argsstring>
        <name>Ltau</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Number of imaginary-time points. 
Interfaces to :f:var:`Ltau`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="152" column="12" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="152" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a46ae1ea7bb297a3655d52286fcd260ed" prot="public" static="no" extern="yes" mutable="no">
        <type>int</type>
        <definition>int Nbath</definition>
        <argsstring></argsstring>
        <name>Nbath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Number of bath sites. 
Interfaces to :f:var:`Nbath`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="160" column="12" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="160" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a063b363a71145a216ae6dc359eaeb1e4" prot="public" static="no" extern="yes" mutable="no">
        <type>int</type>
        <definition>int Nloop</definition>
        <argsstring></argsstring>
        <name>Nloop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Number of DMFT loops. 
Interfaces to :f:var:`Nloop`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="168" column="12" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="168" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a6974e5f5abe2b92cb3aad72b27b02c36" prot="public" static="no" extern="yes" mutable="no">
        <type>int</type>
        <definition>int Norb</definition>
        <argsstring></argsstring>
        <name>Norb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Number of orbitals. 
Interfaces to :f:var:`Norb`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="176" column="12" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="176" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a14f0f0284e54a29b00e80e8d3c7e1c8a" prot="public" static="no" extern="yes" mutable="no">
        <type>int</type>
        <definition>int Nph</definition>
        <argsstring></argsstring>
        <name>Nph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Number of phonons. 
Interfaces to :f:var:`Nph`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="184" column="12" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="184" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a46487704153402186d1879fa72e9a650" prot="public" static="no" extern="yes" mutable="no">
        <type>double</type>
        <definition>double nread</definition>
        <argsstring></argsstring>
        <name>nread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Occupation value for fixed-density calculations. 
Interfaces to :f:var:`nread`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="192" column="15" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="192" declcolumn="15"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a27f9bbd1e0c703274ae42db9042b4965" prot="public" static="no" extern="yes" mutable="no">
        <type>int</type>
        <definition>int Nspin</definition>
        <argsstring></argsstring>
        <name>Nspin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Number of spins. 
Interfaces to :f:var:`Nspin`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="200" column="12" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="200" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1ae02f08232e3936d8d4325b12cd6734d8" prot="public" static="no" extern="yes" mutable="no">
        <type>int</type>
        <definition>int Nsuccess</definition>
        <argsstring></argsstring>
        <name>Nsuccess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Number of iterations under convergence threshod. 
Interfaces to :f:var:`Nsuccess`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="208" column="12" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="208" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a47ddf89779b4df562dd596fd9d9b7863" prot="public" static="no" extern="yes" mutable="no">
        <type>double</type>
        <definition>double sb_field</definition>
        <argsstring></argsstring>
        <name>sb_field</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Symmetry-breaking field. 
Interfaces to :f:var:`sb_field`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="216" column="15" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="216" declcolumn="15"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a390d8c2bfbae79b5f6a7f7817bc772fc" prot="public" static="no" extern="yes" mutable="no">
        <type>double</type>
        <definition>double Uloc[5]</definition>
        <argsstring>[5]</argsstring>
        <name>Uloc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Hubbard interaction strength. 
Interfaces to :f:var:`Uloc`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="224" column="15" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="224" declcolumn="15"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1ac123582e669cfa817e5aa8c4dc7fbfeb" prot="public" static="no" extern="yes" mutable="no">
        <type>double</type>
        <definition>double Ust</definition>
        <argsstring></argsstring>
        <name>Ust</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Density-density Kanamori interaction strength. 
Interfaces to :f:var:`Ust`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="232" column="15" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="232" declcolumn="15"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a51d96edf2e4f7e03dc60a4e42b51ccb1" prot="public" static="no" extern="yes" mutable="no">
        <type>double</type>
        <definition>double wfin</definition>
        <argsstring></argsstring>
        <name>wfin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Upper bound on real axis frequencies. 
Interfaces to :f:var:`wfin`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="240" column="15" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="240" declcolumn="15"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a8511a2b372542e90f4ec6ae2693dc919" prot="public" static="no" extern="yes" mutable="no">
        <type>double</type>
        <definition>double wini</definition>
        <argsstring></argsstring>
        <name>wini</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Upper bound on real axis frequencies. 
Interfaces to :f:var:`wini`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="248" column="15" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="248" declcolumn="15"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1a30554afc6599846bcd01cbf986d0998a" prot="public" static="no" extern="yes" mutable="no">
        <type>double</type>
        <definition>double xmax</definition>
        <argsstring></argsstring>
        <name>xmax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Maximum of the x-range for the local lattice probability distribution function. 
Interfaces to :f:var:`xmax`. 
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="256" column="15" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="256" declcolumn="15"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1ab5bbe897a0c25c58341c216a1b31fbbf" prot="public" static="no" extern="yes" mutable="no">
        <type>double</type>
        <definition>double xmin</definition>
        <argsstring></argsstring>
        <name>xmin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Minimum of the x-range for the local lattice probability distribution function. 
Interfaces to :f:var:`xmin`. 
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="264" column="15" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="264" declcolumn="15"/>
      </memberdef>
      <memberdef kind="variable" id="edipack__cbindings_8h_1aed76d0e8a65ffd03ce3686cbc832fd21" prot="public" static="no" extern="yes" mutable="no">
        <type>double</type>
        <definition>double xmu</definition>
        <argsstring></argsstring>
        <name>xmu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Chemical potential. 
Interfaces to :f:var:`xmu`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="273" column="15" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="273" declcolumn="15"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="edipack__cbindings_8h_1ae409fe210a35a54b8333beeb9dd376b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void read_input</definition>
        <argsstring>(char *instr)</argsstring>
        <name>read_input</name>
        <param>
          <type>char *</type>
          <declname>instr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function reads the input. Interfaces to :f:func:`ed_read_input`
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>instr</parametername>
</parameternamelist>
<parameterdescription>
<para>the input file name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="285" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="285" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a9a21984510a1c509d2e2c97b41460476" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_set_Hloc_single_N2</definition>
        <argsstring>(std::complex&lt; double &gt; *Hloc, int64_t *d)</argsstring>
        <name>ed_set_Hloc_single_N2</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>Hloc</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function sets the local Hamiltonian.
Interfaces to :f:func:`ed_aux_funx/ed_set_Hloc`.
Rank-2 array variant for single-site DMFT
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Hloc</parametername>
</parameternamelist>
<parameterdescription>
<para>the local Hamiltonian </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>array of dimensions of the local Hamiltonian </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="298" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="298" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a5961b62dc686a7e55cd31b5c8c6ecfc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_set_Hloc_single_N4</definition>
        <argsstring>(std::complex&lt; double &gt; *Hloc, int64_t *d)</argsstring>
        <name>ed_set_Hloc_single_N4</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>Hloc</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function sets the local Hamiltonian.
Interfaces to :f:func:`ed_aux_funx/ed_set_Hloc`.
Rank-4 array variant for single-site DMFT.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Hloc</parametername>
</parameternamelist>
<parameterdescription>
<para>the local Hamiltonian </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>array of dimensions of the local Hamiltonian </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="312" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="312" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a283be3d50825229f5ab3bf392055d1d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_set_Hloc_lattice_N2</definition>
        <argsstring>(std::complex&lt; double &gt; *Hloc, int64_t *d, int Nlat)</argsstring>
        <name>ed_set_Hloc_lattice_N2</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>Hloc</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nlat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function sets the local Hamiltonian.
Interfaces to :f:func:`e2i_aux_funx/ed_set_Hloc`.
Rank-2 array variant for real-space DMFT.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Hloc</parametername>
</parameternamelist>
<parameterdescription>
<para>the local Hamiltonian </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>array of dimensions of the local Hamiltonian </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nlat</parametername>
</parameternamelist>
<parameterdescription>
<para>number of inequivalent sites </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="328" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="328" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1ac30e88fb7d676fae179e5fe7633b323e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_set_Hloc_lattice_N3</definition>
        <argsstring>(std::complex&lt; double &gt; *Hloc, int64_t *d, int Nlat)</argsstring>
        <name>ed_set_Hloc_lattice_N3</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>Hloc</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nlat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function sets the local Hamiltonian.
Interfaces to :f:func:`e2i_aux_funx/ed_set_Hloc`.
Rank-3 array variant for real-space DMFT.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Hloc</parametername>
</parameternamelist>
<parameterdescription>
<para>the local Hamiltonian </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>array of dimensions of the local Hamiltonian </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nlat</parametername>
</parameternamelist>
<parameterdescription>
<para>number of inequivalent sites </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="344" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="344" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1ab33d09e46b157b6cbe6bf227afcd3dfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_set_Hloc_lattice_N5</definition>
        <argsstring>(std::complex&lt; double &gt; *Hloc, int64_t *d, int Nlat)</argsstring>
        <name>ed_set_Hloc_lattice_N5</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>Hloc</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nlat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function sets the local Hamiltonian.
Interfaces to :f:func:`e2i_aux_funx/ed_set_Hloc`.
Rank-5 array variant for real-space DMFT.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Hloc</parametername>
</parameternamelist>
<parameterdescription>
<para>the local Hamiltonian </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>array of dimensions of the local Hamiltonian </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nlat</parametername>
</parameternamelist>
<parameterdescription>
<para>number of inequivalent sites </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="360" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="360" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a4a4e282171f9224f2b4c7a6f2b99c91a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_bath_dimension_direct</definition>
        <argsstring>(void)</argsstring>
        <name>get_bath_dimension_direct</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function gets the dimension of the user-accessible bath array.
Interfaces to :f:func:`get_bath_dimension`.
</verbatim></para>
<para><simplesect kind="return"><para>the dimension of the bath array </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="375" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="375" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a037c9d5f278f764549762287e8dbd6f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_bath_dimension_symmetries</definition>
        <argsstring>(int Nsym)</argsstring>
        <name>get_bath_dimension_symmetries</name>
        <param>
          <type>int</type>
          <declname>Nsym</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function gets the dimension of the user-accessible bath array.
Specific for replica and general baths.
Interfaces to :f:func:`get_bath_dimension`.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Nsym</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of components of the replica matrix linear combination </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the dimension of the bath array </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="387" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="387" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1ad2555e3d81b856a06099995d4567c213" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void search_variable</definition>
        <argsstring>(double *var, double *ntmp, int64_t *converged)</argsstring>
        <name>search_variable</name>
        <param>
          <type>double *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ntmp</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>converged</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function updates a variable (usually the chemical potential) trying to 
achieve a desired density set by :f:var:`nread`.
Interfaces to :f:func:`ed_search-variable`.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>var</parametername>
</parameternamelist>
<parameterdescription>
<para>the variable to be adjusted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ntmp</parametername>
</parameternamelist>
<parameterdescription>
<para>the density value at a given iteration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>converged</parametername>
</parameternamelist>
<parameterdescription>
<para>the DMFT loop convergence status. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="400" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="400" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a1f8ed3cd155d62255597f9c3ba9c24cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_Hreplica_symmetries_d3</definition>
        <argsstring>(std::complex&lt; double &gt; *Hvec, int64_t *d_hvec, double *lambdavec, int64_t *d_lambdavec)</argsstring>
        <name>init_Hreplica_symmetries_d3</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>Hvec</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_hvec</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lambdavec</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_lambdavec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function sets the replica bath H. 
Interfaces to :f:func:`ed_bath_replica/set_hreplica`.
Rank-3 array case for single-site DMFT.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Hvec</parametername>
</parameternamelist>
<parameterdescription>
<para>array of matrices summing up to the replica H </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_hvec</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the array of matrices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambdavec</parametername>
</parameternamelist>
<parameterdescription>
<para>array of coefficients of the array linear combination </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_lambdavec</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the array of coefficients </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="418" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="418" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a11552b7665cedfd16ba0f2d2ef723dd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_Hreplica_symmetries_d5</definition>
        <argsstring>(std::complex&lt; double &gt; *Hvec, int64_t *d_hvec, double *lambdavec, int64_t *d_lambdavec)</argsstring>
        <name>init_Hreplica_symmetries_d5</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>Hvec</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_hvec</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lambdavec</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_lambdavec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function sets the replica bath H. 
Interfaces to :f:func:`ed_bath_replica/set_hreplica`.
Rank-5 array case for single-site DMFT.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Hvec</parametername>
</parameternamelist>
<parameterdescription>
<para>array of matrices summing up to the replica H </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_hvec</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the array of matrices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambdavec</parametername>
</parameternamelist>
<parameterdescription>
<para>array of coefficients of the array linear combination </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_lambdavec</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the array of coefficients </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="436" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="436" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a4ebabefe7a0500b40157ab3070e47113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_Hgeneral_symmetries_d3</definition>
        <argsstring>(std::complex&lt; double &gt; *Hvec, int64_t *d_hvec, double *lambdavec, int64_t *d_lambdavec)</argsstring>
        <name>init_Hgeneral_symmetries_d3</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>Hvec</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_hvec</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lambdavec</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_lambdavec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function sets the general bath H. 
Interfaces to :f:func:`ed_bath_replica/set_hgeneral`.
Rank-3 array case for single-site DMFT.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Hvec</parametername>
</parameternamelist>
<parameterdescription>
<para>array of matrices summing up to the general H </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_hvec</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the array of matrices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambdavec</parametername>
</parameternamelist>
<parameterdescription>
<para>array of coefficients of the array linear combination </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_lambdavec</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the array of coefficients </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="454" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="454" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a3e7598ee215e0b8356479dc45a1ac8cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_Hgeneral_symmetries_d5</definition>
        <argsstring>(std::complex&lt; double &gt; *Hvec, int64_t *d_hvec, double *lambdavec, int64_t *d_lambdavec)</argsstring>
        <name>init_Hgeneral_symmetries_d5</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>Hvec</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_hvec</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lambdavec</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_lambdavec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function sets the general bath H. 
Interfaces to :f:func:`ed_bath_replica/set_hgeneral`.
Rank-5 array case for single-site DMFT.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Hvec</parametername>
</parameternamelist>
<parameterdescription>
<para>array of matrices summing up to the general H </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_hvec</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the array of matrices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambdavec</parametername>
</parameternamelist>
<parameterdescription>
<para>array of coefficients of the array linear combination </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_lambdavec</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the array of coefficients </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="472" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="472" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a4280ad33c4976c7fe778f268ddfc795a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_Hreplica_symmetries_lattice_d3</definition>
        <argsstring>(std::complex&lt; double &gt; *Hvec, int64_t *d_hvec, double *lambdavec, int64_t *d_lambdavec)</argsstring>
        <name>init_Hreplica_symmetries_lattice_d3</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>Hvec</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_hvec</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lambdavec</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_lambdavec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function sets the replica bath H. 
Interfaces to :f:func:`e2i_bath_replica/set_hreplica`.
Rank-3 array case for real-space DMFT.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Hvec</parametername>
</parameternamelist>
<parameterdescription>
<para>array of matrices summing up to the replica H </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_hvec</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the array of matrices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambdavec</parametername>
</parameternamelist>
<parameterdescription>
<para>array of coefficients of the array linear combination </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_lambdavec</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the array of coefficients </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="490" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="490" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1ab92d5b34812c105c5a9ff8c1360dc40c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_Hreplica_symmetries_lattice_d5</definition>
        <argsstring>(std::complex&lt; double &gt; *Hvec, int64_t *d_hvec, double *lambdavec, int64_t *d_lambdavec)</argsstring>
        <name>init_Hreplica_symmetries_lattice_d5</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>Hvec</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_hvec</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lambdavec</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_lambdavec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function sets the replica bath H. 
Interfaces to :f:func:`e2i_bath_replica/set_hreplica`.
Rank-5 array case for real-space DMFT.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Hvec</parametername>
</parameternamelist>
<parameterdescription>
<para>array of matrices summing up to the replica H </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_hvec</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the array of matrices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambdavec</parametername>
</parameternamelist>
<parameterdescription>
<para>array of coefficients of the array linear combination </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_lambdavec</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the array of coefficients </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="508" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="508" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1afdaa5cc685ba6e1b9d649e896a7e9a34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_Hgeneral_symmetries_lattice_d3</definition>
        <argsstring>(std::complex&lt; double &gt; *Hvec, int64_t *d_hvec, double *lambdavec, int64_t *d_lambdavec)</argsstring>
        <name>init_Hgeneral_symmetries_lattice_d3</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>Hvec</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_hvec</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lambdavec</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_lambdavec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function sets the general bath H. 
Interfaces to :f:func:`e2i_bath_replica/set_hgeneral`.
Rank-3 array case for real-space DMFT.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Hvec</parametername>
</parameternamelist>
<parameterdescription>
<para>array of matrices summing up to the general H </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_hvec</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the array of matrices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambdavec</parametername>
</parameternamelist>
<parameterdescription>
<para>array of coefficients of the array linear combination </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_lambdavec</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the array of coefficients </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="526" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="526" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a1ce1b29e06a762d53194691cd3cad01d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_Hgeneral_symmetries_lattice_d5</definition>
        <argsstring>(std::complex&lt; double &gt; *Hvec, int64_t *d_hvec, double *lambdavec, int64_t *d_lambdavec)</argsstring>
        <name>init_Hgeneral_symmetries_lattice_d5</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>Hvec</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_hvec</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lambdavec</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>d_lambdavec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function sets the general bath H. 
Interfaces to :f:func:`e2i_bath_replica/set_hgeneral`.
Rank-5 array case for real-space DMFT.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Hvec</parametername>
</parameternamelist>
<parameterdescription>
<para>array of matrices summing up to the general H </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_hvec</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the array of matrices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambdavec</parametername>
</parameternamelist>
<parameterdescription>
<para>array of coefficients of the array linear combination </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d_lambdavec</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the array of coefficients </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="545" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="545" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a058d0915a0ca2c75c7a180f8ebaab313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void break_symmetry_bath_site</definition>
        <argsstring>(double *bath, int64_t *dim_bath, double field, double sgn, int sav)</argsstring>
        <name>break_symmetry_bath_site</name>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>double</type>
          <declname>field</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sgn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sav</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function breaks the bath symmetry. 
Interfaces to :f:func:`ed_bath_user/break_symmetry_bath`. 
Single-site DMFT variant.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>symmetry breaking field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sgn</parametername>
</parameternamelist>
<parameterdescription>
<para>sign of the symmetry breaking field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sav</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag to save the output bath. <computeroutput>1</computeroutput> if true, <computeroutput>0</computeroutput> if false. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="564" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="564" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a483a3ac9e7b9ae0b428bc56972afdf83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void break_symmetry_bath_ineq</definition>
        <argsstring>(double *bath, int64_t *dim_bath, double field, double *sgn, int sav)</argsstring>
        <name>break_symmetry_bath_ineq</name>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>double</type>
          <declname>field</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>sgn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sav</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function breaks the bath symmetry. 
Interfaces to :f:func:`e2i_bath_user/break_symmetry_bath`. 
Real-space DMFT variant.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath and sign array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>symmetry breaking field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sgn</parametername>
</parameternamelist>
<parameterdescription>
<para>array of signs of the symmetry breaking field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sav</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag to save the output bath. <computeroutput>1</computeroutput> if true, <computeroutput>0</computeroutput> if false. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="584" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="584" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1aeffc1651b60b982f0c311fbaccb67a07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spin_symmetrize_bath_site</definition>
        <argsstring>(double *bath, int64_t *dim_bath, int sav)</argsstring>
        <name>spin_symmetrize_bath_site</name>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sav</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function enforces a paramagnetic bath
Interfaces to :f:func:`ed_bath_user/spin_symmetrize_bath`. 
Single-site DMFT variant.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath and sign array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sav</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag to save the output bath. <computeroutput>1</computeroutput> if true, <computeroutput>0</computeroutput> if false. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="602" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="602" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1acdfa654baef16d6d55e1a1f5a0e2ca83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spin_symmetrize_bath_ineq</definition>
        <argsstring>(double *bath, int64_t *dim_bath, int sav)</argsstring>
        <name>spin_symmetrize_bath_ineq</name>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sav</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function enforces a paramagnetic bath
Interfaces to :f:func:`e2i_bath_user/spin_symmetrize_bath`. 
Real-space DMFT variant.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sav</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag to save the output bath. <computeroutput>1</computeroutput> if true, <computeroutput>0</computeroutput> if false. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="618" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="618" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a95a7566dea65925afc93b3bc672f0562" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void orb_symmetrize_bath_site</definition>
        <argsstring>(double *bath, int64_t *dim_bath, int orb1, int orb2, int sav)</argsstring>
        <name>orb_symmetrize_bath_site</name>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>orb1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>orb2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sav</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function enforces an orbital-symmetric bath. 
Interfaces to :f:func:`ed_bath_user/orb_symmetrize_bath`. 
Single-site DMFT variant.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orb1</parametername>
</parameternamelist>
<parameterdescription>
<para>first orbital to symmetrize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orb2</parametername>
</parameternamelist>
<parameterdescription>
<para>second orbital to symmetrize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sav</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag to save the output bath. <computeroutput>1</computeroutput> if true, <computeroutput>0</computeroutput> if false. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="636" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="636" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a20fbd19ce52920cdc33ac756822374fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void orb_symmetrize_bath_ineq</definition>
        <argsstring>(double *bath, int64_t *dim_bath, int orb1, int orb2, int sav)</argsstring>
        <name>orb_symmetrize_bath_ineq</name>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>orb1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>orb2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sav</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function enforces an orbital-symmetric bath. 
Interfaces to :f:func:`e2i_bath_user/orb_symmetrize_bath`. 
Real-space DMFT variant.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orb1</parametername>
</parameternamelist>
<parameterdescription>
<para>first orbital to symmetrize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orb2</parametername>
</parameternamelist>
<parameterdescription>
<para>second orbital to symmetrize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sav</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag to save the output bath. <computeroutput>1</computeroutput> if true, <computeroutput>0</computeroutput> if false. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="656" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="656" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a43efee593311f6632cc2f4a0b6771104" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void orb_equality_bath_site</definition>
        <argsstring>(double *bath, int64_t *dim_bath, int indx, int sav)</argsstring>
        <name>orb_equality_bath_site</name>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sav</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function enforces an orbita-symmetric bath. 
Interfaces to :f:func:`ed_bath_user/orb_symmetrize_bath`. 
Single-site DMFT variant.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indx</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the orbital to copy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sav</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag to save the output bath. <computeroutput>1</computeroutput> if true, <computeroutput>0</computeroutput> if false. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="675" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="675" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a29411bbaa5094bd0ef7d333964c0c2a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void orb_equality_bath_ineq</definition>
        <argsstring>(double *bath, int64_t *dim_bath, int indx, int sav)</argsstring>
        <name>orb_equality_bath_ineq</name>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sav</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function enforces an orbita-symmetric bath. 
Interfaces to :f:func:`e2i_bath_user/orb_symmetrize_bath`. 
Real-space DMFT variant.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indx</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the orbital to copy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sav</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag to save the output bath. <computeroutput>1</computeroutput> if true, <computeroutput>0</computeroutput> if false. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="693" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="693" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1af66ef6c6420b003adfc940452449db2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ph_symmetrize_bath_site</definition>
        <argsstring>(double *bath, int64_t *dim_bath, int sav)</argsstring>
        <name>ph_symmetrize_bath_site</name>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sav</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function enforces a particle-hole symmetric bath.
Interfaces to :f:func:`ed_bath_user/ph_symmetrize_bath`. 
Single-site DMFT variant.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sav</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag to save the output bath. <computeroutput>1</computeroutput> if true, <computeroutput>0</computeroutput> if false. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="710" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="710" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a42cdb11fb30cef916bd7fca3b25b15a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ph_symmetrize_bath_ineq</definition>
        <argsstring>(double *bath, int64_t *dim_bath, int sav)</argsstring>
        <name>ph_symmetrize_bath_ineq</name>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sav</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function enforces a particle-hole symmetric bath.
Interfaces to :f:func:`e2i_bath_user/ph_symmetrize_bath`. 
Real-space DMFT variant.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sav</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag to save the output bath. <computeroutput>1</computeroutput> if true, <computeroutput>0</computeroutput> if false. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="726" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="726" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1af028e818d4c1b75d44632eac97362c62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void save_array_as_bath_site</definition>
        <argsstring>(double *bath, int64_t *dim_bath)</argsstring>
        <name>save_array_as_bath_site</name>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function saves the bath array in a properly formatted file.
Interfaces to :f:func:`ed_bath_user/save_array_as_bath`. 
Single-site DMFT variant.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="741" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="741" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a2881af411d3fa12bddaf3353c0b217be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void save_array_as_bath_ineq</definition>
        <argsstring>(double *bath, int64_t *dim_bath)</argsstring>
        <name>save_array_as_bath_ineq</name>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function saves the bath array in a properly formatted file.
Interfaces to :f:func:`e2i_bath_user/save_array_as_bath`. 
Real-space DMFT variant.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="755" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="755" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a26632202f61533382fc02a28f866c977" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void chi2_fitgf_single_normal_n3</definition>
        <argsstring>(std::complex&lt; double &gt; *g, int64_t *dim_g, double *bath, int64_t *dim_bath, int ispin, int iorb, int fmpi)</argsstring>
        <name>chi2_fitgf_single_normal_n3</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ispin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iorb</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fmpi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function fits the Weiss field or hybridization function.
Interfaces to :f:func:`ed_bath_fit/ed_chi2_fitgf`. 
Single-site DMFT variant for :f:var:`ED_MODE` = :code:`NORMAL/NONSU2` and rank-3 arrays.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>function to fit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_g</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the function to fit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ispin</parametername>
</parameternamelist>
<parameterdescription>
<para>spin index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iorb</parametername>
</parameternamelist>
<parameterdescription>
<para>orbital index. If <computeroutput>0</computeroutput>, the fortran function is called without <computeroutput>iorb</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmpi</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag to enable mpi. <computeroutput>1</computeroutput> for <computeroutput>True</computeroutput>, <computeroutput>0</computeroutput> for <computeroutput>False</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="777" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="777" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a4e62ca8b208c7974f42b49600ff34010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void chi2_fitgf_single_normal_n5</definition>
        <argsstring>(std::complex&lt; double &gt; *g, int64_t *dim_g, double *bath, int64_t *dim_bath, int ispin, int iorb, int fmpi)</argsstring>
        <name>chi2_fitgf_single_normal_n5</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ispin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iorb</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fmpi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function fits the Weiss field or hybridization function.
Interfaces to :f:func:`ed_bath_fit/ed_chi2_fitgf`. 
Single-site DMFT variant for :f:var:`ED_MODE` = :code:`NORMAL/NONSU2` and rank-5 arrays.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>function to fit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_g</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the function to fit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ispin</parametername>
</parameternamelist>
<parameterdescription>
<para>spin index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iorb</parametername>
</parameternamelist>
<parameterdescription>
<para>orbital index. If <computeroutput>0</computeroutput>, the fortran function is called without <computeroutput>iorb</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmpi</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag to enable mpi. <computeroutput>1</computeroutput> for <computeroutput>True</computeroutput>, <computeroutput>0</computeroutput> for <computeroutput>False</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="801" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="801" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a084045ab718641af450aac6fee89d326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void chi2_fitgf_single_superc_n3</definition>
        <argsstring>(std::complex&lt; double &gt; *g, int64_t *dim_g, std::complex&lt; double &gt; *f, int64_t *dim_f, double *bath, int64_t *dim_bath, int ispin, int iorb, int fmpi)</argsstring>
        <name>chi2_fitgf_single_superc_n3</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_g</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ispin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iorb</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fmpi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function fits the Weiss field or hybridization function.
Interfaces to :f:func:`ed_bath_fit/ed_chi2_fitgf`. 
Single-site DMFT variant for :f:var:`ED_MODE` = :code:`SUPERC` and rank-3 arrays.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>function to fit, normal component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_g</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the function to fit, normal component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>function to fit, anomalous component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_f</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the function to fit, anomalous component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ispin</parametername>
</parameternamelist>
<parameterdescription>
<para>spin index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iorb</parametername>
</parameternamelist>
<parameterdescription>
<para>orbital index. If <computeroutput>0</computeroutput>, the fortran function is called without <computeroutput>iorb</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmpi</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag to enable mpi. <computeroutput>1</computeroutput> for <computeroutput>True</computeroutput>, <computeroutput>0</computeroutput> for <computeroutput>False</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="827" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="827" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a958544a4f5f37ca67e4d158e881e1e85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void chi2_fitgf_single_superc_n5</definition>
        <argsstring>(std::complex&lt; double &gt; *g, int64_t *dim_g, std::complex&lt; double &gt; *f, int64_t *dim_f, double *bath, int64_t *dim_bath, int ispin, int iorb, int fmpi)</argsstring>
        <name>chi2_fitgf_single_superc_n5</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_g</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ispin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iorb</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fmpi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function fits the Weiss field or hybridization function.
Interfaces to :f:func:`ed_bath_fit/ed_chi2_fitgf`. 
Single-site DMFT variant for :f:var:`ED_MODE` = :code:`SUPERC` and rank-5 arrays.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>function to fit, normal component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_g</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the function to fit, normal component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>function to fit, anomalous component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_f</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the function to fit, anomalous component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ispin</parametername>
</parameternamelist>
<parameterdescription>
<para>spin index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iorb</parametername>
</parameternamelist>
<parameterdescription>
<para>orbital index. If <computeroutput>0</computeroutput>, the fortran function is called without <computeroutput>iorb</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmpi</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag to enable mpi. <computeroutput>1</computeroutput> for <computeroutput>True</computeroutput>, <computeroutput>0</computeroutput> for <computeroutput>False</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="856" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="856" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a2daa5a2d780de20446989cb3d382468f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void chi2_fitgf_lattice_normal_n3</definition>
        <argsstring>(std::complex&lt; double &gt; *g, int64_t *dim_g, double *bath, int64_t *dim_bath, int ispin)</argsstring>
        <name>chi2_fitgf_lattice_normal_n3</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ispin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function fits the Weiss field or hybridization function.
Interfaces to :f:func:`e2i_bath_fit/ed_chi2_fitgf`. 
Real-space DMFT variant for :f:var:`ED_MODE` = :code:`NORMAL/NONSU2` and rank-3 arrays.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>function to fit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_g</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the function to fit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ispin</parametername>
</parameternamelist>
<parameterdescription>
<para>spin index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="880" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="880" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1ad5721c291688f6a3f2c2b54d4a5b6a9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void chi2_fitgf_lattice_normal_n4</definition>
        <argsstring>(std::complex&lt; double &gt; *g, int64_t *dim_g, double *bath, int64_t *dim_bath, int ispin)</argsstring>
        <name>chi2_fitgf_lattice_normal_n4</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ispin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function fits the Weiss field or hybridization function.
Interfaces to :f:func:`e2i_bath_fit/ed_chi2_fitgf`. 
Real-space DMFT variant for :f:var:`ED_MODE` = :code:`NORMAL/NONSU2` and rank-4 arrays.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>function to fit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_g</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the function to fit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ispin</parametername>
</parameternamelist>
<parameterdescription>
<para>spin index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="900" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="900" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a6e1832dd3eb16ae6daa305a8566b0509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void chi2_fitgf_lattice_normal_n6</definition>
        <argsstring>(std::complex&lt; double &gt; *g, int64_t *dim_g, double *bath, int64_t *dim_bath, int ispin)</argsstring>
        <name>chi2_fitgf_lattice_normal_n6</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ispin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function fits the Weiss field or hybridization function.
Interfaces to :f:func:`e2i_bath_fit/ed_chi2_fitgf`. 
Real-space DMFT variant for :f:var:`ED_MODE` = :code:`NORMAL/NONSU2` and rank-6 arrays.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>function to fit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_g</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the function to fit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ispin</parametername>
</parameternamelist>
<parameterdescription>
<para>spin index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="920" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="920" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a997eae887139ca72483b7a83f148f1b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void chi2_fitgf_lattice_superc_n3</definition>
        <argsstring>(std::complex&lt; double &gt; *g, int64_t *dim_g, std::complex&lt; double &gt; *f, int64_t *dim_f, double *bath, int64_t *dim_bath, int ispin)</argsstring>
        <name>chi2_fitgf_lattice_superc_n3</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_g</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ispin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function fits the Weiss field or hybridization function.
Interfaces to :f:func:`e2i_bath_fit/ed_chi2_fitgf`. 
Real-space DMFT variant for :f:var:`ED_MODE` = :code:`SUPERC` and rank-3 arrays.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>function to fit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_g</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the function to fit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>function to fit, anomalous component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_f</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the function to fit, anomalous component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ispin</parametername>
</parameternamelist>
<parameterdescription>
<para>spin index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="943" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="943" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a771dff566b4147119033e80d1ff5fd08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void chi2_fitgf_lattice_superc_n4</definition>
        <argsstring>(std::complex&lt; double &gt; *g, int64_t *dim_g, std::complex&lt; double &gt; *f, int64_t *dim_f, double *bath, int64_t *dim_bath, int ispin)</argsstring>
        <name>chi2_fitgf_lattice_superc_n4</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_g</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ispin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function fits the Weiss field or hybridization function.
Interfaces to :f:func:`e2i_bath_fit/ed_chi2_fitgf`. 
Real-space DMFT variant for :f:var:`ED_MODE` = :code:`SUPERC` and rank-4 arrays.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>function to fit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_g</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the function to fit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>function to fit, anomalous component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_f</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the function to fit, anomalous component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ispin</parametername>
</parameternamelist>
<parameterdescription>
<para>spin index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="967" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="967" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a95e81b9e2cbeec862c8dc9a7890dfb28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void chi2_fitgf_lattice_superc_n6</definition>
        <argsstring>(std::complex&lt; double &gt; *g, int64_t *dim_g, std::complex&lt; double &gt; *f, int64_t *dim_f, double *bath, int64_t *dim_bath, int ispin)</argsstring>
        <name>chi2_fitgf_lattice_superc_n6</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_g</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ispin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function fits the Weiss field or hybridization function.
Interfaces to :f:func:`e2i_bath_fit/ed_chi2_fitgf`. 
Real-space DMFT variant for :f:var:`ED_MODE` = :code:`SUPERC` and rank-6 arrays.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>function to fit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_g</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the function to fit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>function to fit, anomalous component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_f</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the function to fit, anomalous component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ispin</parametername>
</parameternamelist>
<parameterdescription>
<para>spin index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="992" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="992" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a2b6b1ef01183279b990c8e2167ec46d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_get_dens_n1</definition>
        <argsstring>(std::complex&lt; double &gt; *self)</argsstring>
        <name>ed_get_dens_n1</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the density.
Interfaces to :f:func:`ed_io/ed_get_dens`. 
Single-site DMFT version
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>orbitally-resolved density array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1011" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1011" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1ad0a0a44e8d638e35187022e3fc327e5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_get_dens_n2</definition>
        <argsstring>(std::complex&lt; double &gt; *self, int Nlat)</argsstring>
        <name>ed_get_dens_n2</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nlat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the density.
Interfaces to :f:func:`e2i_io/ed_get_dens`. 
Real-space DMFT version
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>density array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nlat</parametername>
</parameternamelist>
<parameterdescription>
<para>number of inequivalent sites </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1023" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1023" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a5bcd2c708340e490a44c7065f74b7a22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_get_mag_n2</definition>
        <argsstring>(std::complex&lt; double &gt; *self)</argsstring>
        <name>ed_get_mag_n2</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the magnetization.
Interfaces to :f:func:`ed_io/ed_get_mag`. 
Single-site DMFT version
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>magnetization array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1034" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1034" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1acecf2aa8df76dd05daac3e0ab4130bde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_get_mag_n3</definition>
        <argsstring>(std::complex&lt; double &gt; *self, int Nlat)</argsstring>
        <name>ed_get_mag_n3</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nlat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the magnetization.
Interfaces to :f:func:`e2i_io/ed_get_mag`. 
Real-space DMFT version
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>magnetization array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nlat</parametername>
</parameternamelist>
<parameterdescription>
<para>number of inequivalent sites </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1046" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1046" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a66c7303f445f80d1a5f7314da45443ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_get_docc_n1</definition>
        <argsstring>(std::complex&lt; double &gt; *self)</argsstring>
        <name>ed_get_docc_n1</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the double-occupation.
Interfaces to :f:func:`ed_io/ed_get_docc`. 
Single-site DMFT version
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>double-occupation array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1058" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1058" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1af70e3c662b89300177625e0c17a99487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_get_docc_n2</definition>
        <argsstring>(std::complex&lt; double &gt; *self, int Nlat)</argsstring>
        <name>ed_get_docc_n2</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nlat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the double occupation.
Interfaces to :f:func:`e2i_io/ed_get_docc`. 
Real-space DMFT version
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>double-occupation array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nlat</parametername>
</parameternamelist>
<parameterdescription>
<para>number of inequivalent sites </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1070" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1070" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1aa230869e737df0eaea8c637245cb4f27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_get_phisc_n2</definition>
        <argsstring>(std::complex&lt; double &gt; *self)</argsstring>
        <name>ed_get_phisc_n2</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the superconductive order parameter modulus.
Interfaces to :f:func:`ed_io/ed_get_phi`. 
Single-site DMFT version
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>superconductive order parameter modulus array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1081" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1081" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1ae392ef82d75dcfcf07bfe713c9d464be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_get_phisc_n3</definition>
        <argsstring>(std::complex&lt; double &gt; *self, int Nlat)</argsstring>
        <name>ed_get_phisc_n3</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nlat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the superconductive order parameter modulus.
Interfaces to :f:func:`e2i_io/ed_get_phi`. 
Real-space DMFT version
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>superconductive order parameter modulus array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nlat</parametername>
</parameternamelist>
<parameterdescription>
<para>number of inequivalent sites </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1093" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1093" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a6d8605dadc81aed472d91f51965d8528" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_get_argsc_n2</definition>
        <argsstring>(std::complex&lt; double &gt; *self)</argsstring>
        <name>ed_get_argsc_n2</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the superconductive order parameter argument.
Interfaces to :f:func:`ed_io/ed_get_argphi`. 
Single-site DMFT version
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>superconductive order parameter argument array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1106" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1106" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a7013e1ed2774ea454559cef7a5549026" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_get_argsc_n3</definition>
        <argsstring>(std::complex&lt; double &gt; *self, int Nlat)</argsstring>
        <name>ed_get_argsc_n3</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nlat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the superconductive order parameter argument.
Interfaces to :f:func:`e2i_io/ed_get_argphi`. 
Real-space DMFT version
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>superconductive order parameter argument array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nlat</parametername>
</parameternamelist>
<parameterdescription>
<para>number of inequivalent sites </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1118" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1118" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a754ad281eb2101af1f663cb9e053e556" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_get_eimp_n1</definition>
        <argsstring>(std::complex&lt; double &gt; *self)</argsstring>
        <name>ed_get_eimp_n1</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the local energy.
Interfaces to :f:func:`ed_io/ed_get_eimp`. 
Single-site DMFT version
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>energy array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1131" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1131" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a33ec4c9346f2a9ef3902160dc14def3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_get_eimp_n2</definition>
        <argsstring>(std::complex&lt; double &gt; *self, int Nlat)</argsstring>
        <name>ed_get_eimp_n2</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nlat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the local energy.
Interfaces to :f:func:`e2i_io/ed_get_eimp`. 
Real-space DMFT version
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>energy array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nlat</parametername>
</parameternamelist>
<parameterdescription>
<para>number of inequivalent sites </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1143" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1143" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1add11fccccf8a834454ab898f164d15d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_sigma_site_n3</definition>
        <argsstring>(std::complex&lt; double &gt; *self, int axis, int typ, std::complex&lt; double &gt; *zeta, int dz, int zflag)</argsstring>
        <name>get_sigma_site_n3</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>typ</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the self-energy.
Interfaces to :f:func:`ed_io/ed_get_sigma` for a rank-3 array.
Single-site DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>the self-energy array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for axis: <computeroutput>1</computeroutput> = <computeroutput>r</computeroutput>, otherwise <computeroutput>m</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typ</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for type: <computeroutput>1</computeroutput> = <computeroutput>a</computeroutput>, otherwise <computeroutput>n</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dz</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zflag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to set (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) calculation with internal frequency array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1159" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1159" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1adee20b777829ac3b91047e8b85ca43fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_sigma_site_n5</definition>
        <argsstring>(std::complex&lt; double &gt; *self, int axis, int typ, std::complex&lt; double &gt; *zeta, int dz, int zflag)</argsstring>
        <name>get_sigma_site_n5</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>typ</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the self-energy.
Interfaces to :f:func:`ed_io/ed_get_sigma` for a rank-5 array.
Single-site DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>the self-energy array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for axis: <computeroutput>1</computeroutput> = <computeroutput>r</computeroutput>, otherwise <computeroutput>m</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typ</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for type: <computeroutput>1</computeroutput> = <computeroutput>a</computeroutput>, otherwise <computeroutput>n</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dz</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zflag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to set (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) calculation with internal frequency array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1180" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1180" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a3bc24f41672c726dfe1eaebed6aecd1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_sigma_lattice_n3</definition>
        <argsstring>(std::complex&lt; double &gt; *self, int Nineq, int axis, int typ, std::complex&lt; double &gt; *zeta, int dz, int zflag)</argsstring>
        <name>get_sigma_lattice_n3</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nineq</declname>
        </param>
        <param>
          <type>int</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>typ</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the self-energy.
Interfaces to :f:func:`e2i_io/ed_get_sigma` for a rank-3 array.
Real-space DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>the self-energy array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nineq</parametername>
</parameternamelist>
<parameterdescription>
<para>numer of inequivalent sites </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for axis: <computeroutput>1</computeroutput> = <computeroutput>r</computeroutput>, otherwise <computeroutput>m</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typ</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for type: <computeroutput>1</computeroutput> = <computeroutput>a</computeroutput>, otherwise <computeroutput>n</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dz</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zflag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to set (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) calculation with internal frequency array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1202" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1202" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a8a33eee86057164c44ead3cf9bbdb5a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_sigma_lattice_n4</definition>
        <argsstring>(std::complex&lt; double &gt; *self, int Nineq, int axis, int typ, std::complex&lt; double &gt; *zeta, int dz, int zflag)</argsstring>
        <name>get_sigma_lattice_n4</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nineq</declname>
        </param>
        <param>
          <type>int</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>typ</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the self-energy.
Interfaces to :f:func:`e2i_io/ed_get_sigma` for a rank-4 array.
Real-space DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>the self-energy array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nineq</parametername>
</parameternamelist>
<parameterdescription>
<para>numer of inequivalent sites </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for axis: <computeroutput>1</computeroutput> = <computeroutput>r</computeroutput>, otherwise <computeroutput>m</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typ</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for type: <computeroutput>1</computeroutput> = <computeroutput>a</computeroutput>, otherwise <computeroutput>n</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dz</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zflag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to set (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) calculation with internal frequency array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1225" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1225" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a8a0f7f96cd75fca91c9b3cbe879bf138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_sigma_lattice_n6</definition>
        <argsstring>(std::complex&lt; double &gt; *self, int Nineq, int axis, int typ, std::complex&lt; double &gt; *zeta, int dz, int zflag)</argsstring>
        <name>get_sigma_lattice_n6</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nineq</declname>
        </param>
        <param>
          <type>int</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>typ</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the self-energy.
Interfaces to :f:func:`e2i_io/ed_get_sigma` for a rank-6 array.
Real-space DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>the self-energy array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nineq</parametername>
</parameternamelist>
<parameterdescription>
<para>numer of inequivalent sites </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for axis: <computeroutput>1</computeroutput> = <computeroutput>r</computeroutput>, otherwise <computeroutput>m</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typ</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for type: <computeroutput>1</computeroutput> = <computeroutput>a</computeroutput>, otherwise <computeroutput>n</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dz</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zflag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to set (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) calculation with internal frequency array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1248" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1248" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a6f46b952858a987d1877afcf3d253ed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_gimp_site_n3</definition>
        <argsstring>(std::complex&lt; double &gt; *gimp, int axis, int typ, std::complex&lt; double &gt; *zeta, int dz, int zflag)</argsstring>
        <name>get_gimp_site_n3</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>gimp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>typ</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the impurity Green&apos;s function.
Interfaces to :f:func:`ed_io/ed_get_gimp` for a rank-3 array.
Single-site DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gimp</parametername>
</parameternamelist>
<parameterdescription>
<para>the impurity Green&apos;s function array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for axis: <computeroutput>1</computeroutput> = <computeroutput>r</computeroutput>, otherwise <computeroutput>m</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typ</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for type: <computeroutput>1</computeroutput> = <computeroutput>a</computeroutput>, otherwise <computeroutput>n</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dz</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zflag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to set (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) calculation with internal frequency array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1270" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1270" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a813f72b7d06edfb9b0da540572540892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_gimp_site_n5</definition>
        <argsstring>(std::complex&lt; double &gt; *gimp, int axis, int typ, std::complex&lt; double &gt; *zeta, int dz, int zflag)</argsstring>
        <name>get_gimp_site_n5</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>gimp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>typ</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the impurity Green&apos;s function.
Interfaces to :f:func:`ed_io/ed_get_gimp` for a rank-5 array.
Single-site DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gimp</parametername>
</parameternamelist>
<parameterdescription>
<para>the impurity Green&apos;s function array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for axis: <computeroutput>1</computeroutput> = <computeroutput>r</computeroutput>, otherwise <computeroutput>m</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typ</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for type: <computeroutput>1</computeroutput> = <computeroutput>a</computeroutput>, otherwise <computeroutput>n</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dz</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zflag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to set (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) calculation with internal frequency array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1292" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1292" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1ae41a3177c46943b9da8501f2dbc44a26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_gimp_lattice_n3</definition>
        <argsstring>(std::complex&lt; double &gt; *gimp, int Nineq, int axis, int typ, std::complex&lt; double &gt; *zeta, int dz, int zflag)</argsstring>
        <name>get_gimp_lattice_n3</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>gimp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nineq</declname>
        </param>
        <param>
          <type>int</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>typ</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the impurity Green&apos;s function.
Interfaces to :f:func:`e2i_io/ed_get_gimp` for a rank-3 array.
Real-space DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gimp</parametername>
</parameternamelist>
<parameterdescription>
<para>the impurity Green&apos;s function array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nineq</parametername>
</parameternamelist>
<parameterdescription>
<para>numer of inequivalent sites </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for axis: <computeroutput>1</computeroutput> = <computeroutput>r</computeroutput>, otherwise <computeroutput>m</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typ</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for type: <computeroutput>1</computeroutput> = <computeroutput>a</computeroutput>, otherwise <computeroutput>n</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dz</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zflag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to set (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) calculation with internal frequency array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1314" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1314" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a016c1050ca09b251ec9d855aa8b11639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_gimp_lattice_n4</definition>
        <argsstring>(std::complex&lt; double &gt; *gimp, int Nineq, int axis, int typ, std::complex&lt; double &gt; *zeta, int dz, int zflag)</argsstring>
        <name>get_gimp_lattice_n4</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>gimp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nineq</declname>
        </param>
        <param>
          <type>int</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>typ</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the impurity Green&apos;s function.
Interfaces to :f:func:`e2i_io/ed_get_gimp` for a rank-4 array.
Real-space DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gimp</parametername>
</parameternamelist>
<parameterdescription>
<para>the impurity Green&apos;s function array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nineq</parametername>
</parameternamelist>
<parameterdescription>
<para>numer of inequivalent sites </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for axis: <computeroutput>1</computeroutput> = <computeroutput>r</computeroutput>, otherwise <computeroutput>m</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typ</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for type: <computeroutput>1</computeroutput> = <computeroutput>a</computeroutput>, otherwise <computeroutput>n</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dz</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zflag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to set (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) calculation with internal frequency array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1337" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1337" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a9f5109244481b5eb4bf4499bd43c87a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_gimp_lattice_n6</definition>
        <argsstring>(std::complex&lt; double &gt; *gimp, int Nineq, int axis, int typ, std::complex&lt; double &gt; *zeta, int dz, int zflag)</argsstring>
        <name>get_gimp_lattice_n6</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>gimp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nineq</declname>
        </param>
        <param>
          <type>int</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>typ</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the impurity Green&apos;s function.
Interfaces to :f:func:`e2i_io/ed_get_gimp` for a rank-6 array.
Real-space DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gimp</parametername>
</parameternamelist>
<parameterdescription>
<para>the impurity Green&apos;s function array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nineq</parametername>
</parameternamelist>
<parameterdescription>
<para>numer of inequivalent sites </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for axis: <computeroutput>1</computeroutput> = <computeroutput>r</computeroutput>, otherwise <computeroutput>m</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typ</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for type: <computeroutput>1</computeroutput> = <computeroutput>a</computeroutput>, otherwise <computeroutput>n</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dz</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zflag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to set (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) calculation with internal frequency array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1360" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1360" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a4b0d3ecb1622e1189cb91e5e749dc3f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_g0and_n3</definition>
        <argsstring>(std::complex&lt; double &gt; *warray, int64_t *dim_warray, double *bath, int dim_bath, std::complex&lt; double &gt; *G0and, int64_t *dim_g0and, char *axis, char *typ)</argsstring>
        <name>get_g0and_n3</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>warray</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_warray</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>G0and</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_g0and</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>typ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the Weiss field.
Interfaces to :f:func:`ed_io/ed_get_g0and` for a rank-3 array.
Single-site DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>warray</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of frequencies </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_warray</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension of the array of frequencies </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>User-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>G0and</parametername>
</parameternamelist>
<parameterdescription>
<para>the Weiss field array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_g0and</parametername>
</parameternamelist>
<parameterdescription>
<para>the dimensions of the Weiss field array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for axis: <computeroutput>1</computeroutput> = <computeroutput>r</computeroutput>, otherwise <computeroutput>m</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typ</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for type: <computeroutput>1</computeroutput> = <computeroutput>a</computeroutput>, otherwise <computeroutput>n</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1386" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1386" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1ae527ec14f7dd141aa130c5e3c7845044" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_g0and_n5</definition>
        <argsstring>(std::complex&lt; double &gt; *warray, int64_t *dim_warray, double *bath, int dim_bath, std::complex&lt; double &gt; *G0and, int64_t *dim_g0and, char *axis=(char *)&quot;m&quot;, char *typ=(char *)&quot;n&quot;)</argsstring>
        <name>get_g0and_n5</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>warray</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_warray</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>G0and</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_g0and</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>axis</declname>
          <defval>(char *)&quot;m&quot;</defval>
        </param>
        <param>
          <type>char *</type>
          <declname>typ</declname>
          <defval>(char *)&quot;n&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the Weiss field.
Interfaces to :f:func:`ed_io/ed_get_g0and` for a rank-5 array.
Single-site DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>warray</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of frequencies </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_warray</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension of the array of frequencies </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>User-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>G0and</parametername>
</parameternamelist>
<parameterdescription>
<para>the Weiss field array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_g0and</parametername>
</parameternamelist>
<parameterdescription>
<para>the dimensions of the Weiss field array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for axis: <computeroutput>1</computeroutput> = <computeroutput>r</computeroutput>, otherwise <computeroutput>m</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typ</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for type: <computeroutput>1</computeroutput> = <computeroutput>a</computeroutput>, otherwise <computeroutput>n</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1411" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1411" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1abbf88fd534eb6d4ebd16c9a13a520bf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_delta_n3</definition>
        <argsstring>(std::complex&lt; double &gt; *warray, int64_t *dim_warray, double *bath, int dim_bath, std::complex&lt; double &gt; *Delta, int64_t *dim_delta, char *axis, char *typ)</argsstring>
        <name>get_delta_n3</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>warray</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_warray</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>Delta</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_delta</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>typ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the hybridization function.
Interfaces to :f:func:`ed_io/ed_get_delta` for a rank-3 array.
Single-site DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>warray</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of frequencies </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_warray</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension of the array of frequencies </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>User-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Delta</parametername>
</parameternamelist>
<parameterdescription>
<para>the Weiss field array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_delta</parametername>
</parameternamelist>
<parameterdescription>
<para>the dimensions of the Weiss field array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for axis: <computeroutput>1</computeroutput> = <computeroutput>r</computeroutput>, otherwise <computeroutput>m</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typ</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for type: <computeroutput>1</computeroutput> = <computeroutput>a</computeroutput>, otherwise <computeroutput>n</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1437" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1437" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a5c836330014575863b47cd02f5732921" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_delta_n5</definition>
        <argsstring>(std::complex&lt; double &gt; *warray, int64_t *dim_warray, double *bath, int dim_bath, std::complex&lt; double &gt; *Delta, int64_t *dim_delta, char *axis, char *typ)</argsstring>
        <name>get_delta_n5</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>warray</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_warray</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>Delta</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_delta</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>typ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the hybridization function.
Interfaces to :f:func:`ed_io/ed_get_delta` for a rank-5 array.
Single-site DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>warray</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of frequencies </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_warray</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension of the array of frequencies </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>User-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Delta</parametername>
</parameternamelist>
<parameterdescription>
<para>the Weiss field array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_delta</parametername>
</parameternamelist>
<parameterdescription>
<para>the dimensions of the Weiss field array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for axis: <computeroutput>1</computeroutput> = <computeroutput>r</computeroutput>, otherwise <computeroutput>m</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typ</parametername>
</parameternamelist>
<parameterdescription>
<para>integer flag for type: <computeroutput>1</computeroutput> = <computeroutput>a</computeroutput>, otherwise <computeroutput>n</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1463" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1463" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a1bbc84998265830bba253f3e12c4c46a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_get_spinchi</definition>
        <argsstring>(std::complex&lt; double &gt; *self, std::complex&lt; double &gt; *zeta, int dim_zeta, int zetaflag, char *axis, int Nsites, int latticeflag)</argsstring>
        <name>ed_get_spinchi</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim_zeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zetaflag</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nsites</declname>
        </param>
        <param>
          <type>int</type>
          <declname>latticeflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the spin susceptibility.
Interfaces to :f:func:`ed_io/ed_spinchi` or :f:func:`e2i_io/ed_spinchi`.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>susceptibility array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zetaflag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to set (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) calculation with internal frequency/time array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>flag for axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nsites</parametername>
</parameternamelist>
<parameterdescription>
<para>number of inequivalent sites (<computeroutput>1</computeroutput> for single-impurity) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latticeflag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to set (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) calculation with real-space DMFT </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1487" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1487" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1aee84493a7c0a6c59d0eb9af4a061d70f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_get_denschi</definition>
        <argsstring>(std::complex&lt; double &gt; *self, std::complex&lt; double &gt; *zeta, int dim_zeta, int zetaflag, char *axis, int Nsites, int latticeflag)</argsstring>
        <name>ed_get_denschi</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim_zeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zetaflag</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nsites</declname>
        </param>
        <param>
          <type>int</type>
          <declname>latticeflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the charge susceptibility.
Interfaces to :f:func:`ed_io/ed_denschi` or :f:func:`e2i_io/ed_denschi`.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>susceptibility array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zetaflag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to set (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) calculation with internal frequency/time array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>flag for axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nsites</parametername>
</parameternamelist>
<parameterdescription>
<para>number of inequivalent sites (<computeroutput>1</computeroutput> for single-impurity) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latticeflag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to set (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) calculation with real-space DMFT </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1509" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1509" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a127a97bde10877bcf6449f6ee6d746f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_get_pairchi</definition>
        <argsstring>(std::complex&lt; double &gt; *self, std::complex&lt; double &gt; *zeta, int dim_zeta, int zetaflag, char *axis, int Nsites, int latticeflag)</argsstring>
        <name>ed_get_pairchi</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim_zeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zetaflag</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nsites</declname>
        </param>
        <param>
          <type>int</type>
          <declname>latticeflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the pairing susceptibility.
Interfaces to :f:func:`ed_io/ed_pairchi` or :f:func:`e2i_io/ed_pairchi`.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>susceptibility array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zetaflag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to set (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) calculation with internal frequency/time array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>flag for axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nsites</parametername>
</parameternamelist>
<parameterdescription>
<para>number of inequivalent sites (<computeroutput>1</computeroutput> for single-impurity) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latticeflag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to set (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) calculation with real-space DMFT </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1532" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1532" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a3ecaa46122433e2b4e27642e22c268ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_get_exctchi</definition>
        <argsstring>(std::complex&lt; double &gt; *self, std::complex&lt; double &gt; *zeta, int dim_zeta, int zetaflag, char *axis, int Nsites, int latticeflag)</argsstring>
        <name>ed_get_exctchi</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>zeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim_zeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zetaflag</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nsites</declname>
        </param>
        <param>
          <type>int</type>
          <declname>latticeflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the excitonic susceptibility.
Interfaces to :f:func:`ed_io/ed_exctchi` or :f:func:`e2i_io/ed_exctchi`.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>susceptibility array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_zeta</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the frequency array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zetaflag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to set (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) calculation with internal frequency/time array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>flag for axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Nsites</parametername>
</parameternamelist>
<parameterdescription>
<para>number of inequivalent sites (<computeroutput>1</computeroutput> for single-impurity) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latticeflag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to set (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) calculation with real-space DMFT </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1554" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1554" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1aa02f534a27d00248fb7d39e0b8ed4370" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ed_get_impurity_rdm</definition>
        <argsstring>(std::complex&lt; double &gt; *rdm, int doprint)</argsstring>
        <name>ed_get_impurity_rdm</name>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>rdm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>doprint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function obtains the impurity reduced density matrix.
Interfaces to :f:func:`ed_io/ed_get_impurity_rdm`.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rdm</parametername>
</parameternamelist>
<parameterdescription>
<para>impurity reduced density matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>doprint</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to print to file (<computeroutput>1</computeroutput>) or not (<computeroutput>0</computeroutput>) the RDM </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1571" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1571" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1aa0543855d50d9c185f775a7b76da1513" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_solver_site</definition>
        <argsstring>(double *bath, int64_t *dim_bath)</argsstring>
        <name>init_solver_site</name>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function initializes the solver.
Interfaces to :f:func:`ed_main/ed_init_solver`.
Single-site DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1584" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1584" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a35f4d29a883dfdcc79694379a669dc90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_solver_site_nobath</definition>
        <argsstring>()</argsstring>
        <name>init_solver_site_nobath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function initializes the solver for an isolated impurity.
Interfaces to :f:func:`ed_main/ed_init_solver`.
Single-site DMFT variant.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1593" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1593" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a6da397dbec73ae892da59e871def29ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_solver_ineq</definition>
        <argsstring>(double *bath, int64_t *dim_bath)</argsstring>
        <name>init_solver_ineq</name>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function initializes the solver.
Interfaces to :f:func:`ed_main/ed_init_solver`.
Real-space DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1604" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1604" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a92261024c664083ab0ce5193116a12ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_solver_ineq_nobath</definition>
        <argsstring>(int Nlat)</argsstring>
        <name>init_solver_ineq_nobath</name>
        <param>
          <type>int</type>
          <declname>Nlat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function initializes the solver for an isolated impurity.
Interfaces to :f:func:`ed_main/ed_init_solver`.
Real-space DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Nlat</parametername>
</parameternamelist>
<parameterdescription>
<para>number of inequivalent sites </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1615" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1615" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a6dcfbd68701667f8da751170aadb0bdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void solve_site</definition>
        <argsstring>(double *bath, int64_t *dim_bath, int flag_gf, int flag_mpi)</argsstring>
        <name>solve_site</name>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flag_gf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flag_mpi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
Solves the impurity problem.
Interfaces to :f:func:`ed_main/solve`.
Single-site DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag_gf</parametername>
</parameternamelist>
<parameterdescription>
<para>Green&apos;s function calculation flag (<computeroutput>1</computeroutput>=<computeroutput>True</computeroutput>, <computeroutput>0</computeroutput>=<computeroutput>False</computeroutput>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag_mpi</parametername>
</parameternamelist>
<parameterdescription>
<para>mpi setting flag (<computeroutput>1</computeroutput>=<computeroutput>True</computeroutput>, <computeroutput>0</computeroutput>=<computeroutput>False</computeroutput>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1628" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1628" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a0853cd41df669d0431fa1152b90f4c2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void solve_site_nobath</definition>
        <argsstring>(int flag_gf, int flag_mpi)</argsstring>
        <name>solve_site_nobath</name>
        <param>
          <type>int</type>
          <declname>flag_gf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flag_mpi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function solves the impurity problem for the case of
an isolated impurity.
Interfaces to :f:func:`ed_main/solve`.
Single-site DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flag_gf</parametername>
</parameternamelist>
<parameterdescription>
<para>Green&apos;s function calculation flag (<computeroutput>1</computeroutput>=<computeroutput>True</computeroutput>, <computeroutput>0</computeroutput>=<computeroutput>False</computeroutput>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag_mpi</parametername>
</parameternamelist>
<parameterdescription>
<para>mpi setting flag (<computeroutput>1</computeroutput>=<computeroutput>True</computeroutput>, <computeroutput>0</computeroutput>=<computeroutput>False</computeroutput>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1644" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1644" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1abd975dfeb634565f628804c906e6bc83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void solve_ineq</definition>
        <argsstring>(double *bath, int64_t *dim_bath, int flag_gf, int mpi_lanc)</argsstring>
        <name>solve_ineq</name>
        <param>
          <type>double *</type>
          <declname>bath</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>dim_bath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flag_gf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mpi_lanc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function solves the impurity problem.
Interfaces to :f:func:`e2i_main/solve`.
Real-space DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bath</parametername>
</parameternamelist>
<parameterdescription>
<para>user-accessible bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim_bath</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of the bath array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag_gf</parametername>
</parameternamelist>
<parameterdescription>
<para>Green&apos;s function calculation flag (<computeroutput>1</computeroutput>=<computeroutput>True</computeroutput>, <computeroutput>0</computeroutput>=<computeroutput>False</computeroutput>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mpi_lanc</parametername>
</parameternamelist>
<parameterdescription>
<para>parallelization setting flag (<computeroutput>1</computeroutput>=<computeroutput>True</computeroutput>, <computeroutput>0</computeroutput>=<computeroutput>False</computeroutput>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1660" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1660" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a6cd2db7bcf757c8733b5e809a417eba1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void solve_ineq_nobath</definition>
        <argsstring>(int Nlat, int flag_gf, int mpi_lanc)</argsstring>
        <name>solve_ineq_nobath</name>
        <param>
          <type>int</type>
          <declname>Nlat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flag_gf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mpi_lanc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function solves the impurity problem for the case of
an isolated impuirty.
Interfaces to :f:func:`e2i_main/solve`.
Real-space DMFT variant.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Nlat</parametername>
</parameternamelist>
<parameterdescription>
<para>number of inequivalent sites </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag_gf</parametername>
</parameternamelist>
<parameterdescription>
<para>Green&apos;s function calculation flag (<computeroutput>1</computeroutput>=<computeroutput>True</computeroutput>, <computeroutput>0</computeroutput>=<computeroutput>False</computeroutput>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mpi_lanc</parametername>
</parameternamelist>
<parameterdescription>
<para>parallelization setting flag (<computeroutput>1</computeroutput>=<computeroutput>True</computeroutput>, <computeroutput>0</computeroutput>=<computeroutput>False</computeroutput>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1677" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1677" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1aba47dd81d35d1e85d853b0088e5bc8b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void finalize_solver</definition>
        <argsstring>(int Nineq)</argsstring>
        <name>finalize_solver</name>
        <param>
          <type>int</type>
          <declname>Nineq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function finalizes the solver.
Interfaces to :f:func:`ed_main/finalize_solver` and :f:func:`e2i_main/finalize_solver`.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Nineq</parametername>
</parameternamelist>
<parameterdescription>
<para>number of inequivalent sites. Set to <computeroutput>0</computeroutput> for single-site DMFT. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1689" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1689" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a33360610df2e7782f542c5857c1228ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reset_umatrix</definition>
        <argsstring>()</argsstring>
        <name>reset_umatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function resets the interaction coefficients and user-provided terms
Interfaces to :f:func:`ed_parse_umatrix/reset_umatrix`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1697" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1697" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="edipack__cbindings_8h_1a541e2df14244cfcf0c56b09142e2e350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add_twobody_operator</definition>
        <argsstring>(int o1, int s1, int o2, int s2, int o3, int s3, int o4, int s4, double U)</argsstring>
        <name>add_twobody_operator</name>
        <param>
          <type>int</type>
          <declname>o1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o3</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s3</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o4</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s4</declname>
        </param>
        <param>
          <type>double</type>
          <declname>U</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst
This function sets the a two-body interaction term
Interfaces to :f:func:`ed_parse_umatrix/add_twobody_operator`.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>o1</parametername>
</parameternamelist>
<parameterdescription>
<para>orbital index of first creation operator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s1</parametername>
</parameternamelist>
<parameterdescription>
<para>spin index of first creation operator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>o2</parametername>
</parameternamelist>
<parameterdescription>
<para>orbital index of second creation operator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s2</parametername>
</parameternamelist>
<parameterdescription>
<para>spin index of second creation operator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>o3</parametername>
</parameternamelist>
<parameterdescription>
<para>orbital index of first annihilation operator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s3</parametername>
</parameternamelist>
<parameterdescription>
<para>spin index of first annihilation operator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>o4</parametername>
</parameternamelist>
<parameterdescription>
<para>orbital index of second annihilation operator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s4</parametername>
</parameternamelist>
<parameterdescription>
<para>spin index of second annihilation operator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>interaction coefficient </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" line="1714" column="6" declfile="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h" declline="1714" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>EDIPACK_CBINDINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EDIPACK_CBINDINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;complex.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1af0dd1edd01df6f6dccd5c7fb5bb4c9a8" kindref="member">has_ineq</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a9424343761f8c4f4c1afe8f5b6bf471b" kindref="member">beta</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1ad1e352bfdf2f1edd866901c6827ee1a5" kindref="member">chidens_flag</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1ae8058fea3a4b4ab62975b4de3cde00c6" kindref="member">chiexct_flag</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a58ef1fc1afab4547b7b6900e88ed7125" kindref="member">chipair_flag</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a94ce4059de19ab8b48859aca79690cc7" kindref="member">chispin_flag</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a058cde9e32ea18e1b166b8bcf20fbb3f" kindref="member">dmft_error</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a179ae07c9e10b47eb1e3a2a2d3087d28" kindref="member">ed_twin</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a1a4f0db143dd9d1c071355af43cd215b" kindref="member">ed_total_ud</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a974b448c3d0a13d483d36ef15de369b5" kindref="member">eps</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1acaab22633fac5225c9c5838463e8741a" kindref="member">Jh</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a5f4d6ca721a318bce7d17c61b8d89e41" kindref="member">Jp</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a56f382711dc8d2a0a46aaaf5ceeacfb1" kindref="member">Jx</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1ab484dfd3c277a72c3f1b792e5ed6ed38" kindref="member">Lfit</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a17fe451d3a3d637b023c8bcc5234560e" kindref="member">Lmats</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a7f187f30f4f740a6729de02aa7bd0675" kindref="member">Lreal</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a09c1c7cda21c1df40a7e50bd8be1221b" kindref="member">Lpos</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a263691cebfbf1977e8c92b4cdae0a24d" kindref="member">Ltau</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a46ae1ea7bb297a3655d52286fcd260ed" kindref="member">Nbath</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a063b363a71145a216ae6dc359eaeb1e4" kindref="member">Nloop</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a6974e5f5abe2b92cb3aad72b27b02c36" kindref="member">Norb</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a14f0f0284e54a29b00e80e8d3c7e1c8a" kindref="member">Nph</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a46487704153402186d1879fa72e9a650" kindref="member">nread</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a27f9bbd1e0c703274ae42db9042b4965" kindref="member">Nspin</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1ae02f08232e3936d8d4325b12cd6734d8" kindref="member">Nsuccess</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a47ddf89779b4df562dd596fd9d9b7863" kindref="member">sb_field</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a390d8c2bfbae79b5f6a7f7817bc772fc" kindref="member">Uloc</ref>[5];</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1ac123582e669cfa817e5aa8c4dc7fbfeb" kindref="member">Ust</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a51d96edf2e4f7e03dc60a4e42b51ccb1" kindref="member">wfin</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a8511a2b372542e90f4ec6ae2693dc919" kindref="member">wini</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a30554afc6599846bcd01cbf986d0998a" kindref="member">xmax</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1ab5bbe897a0c25c58341c216a1b31fbbf" kindref="member">xmin</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1aed76d0e8a65ffd03ce3686cbc832fd21" kindref="member">xmu</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="edipack__cbindings_8h_1ae409fe210a35a54b8333beeb9dd376b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1ae409fe210a35a54b8333beeb9dd376b0" kindref="member">read_input</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*instr);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="edipack__cbindings_8h_1a9a21984510a1c509d2e2c97b41460476" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a9a21984510a1c509d2e2c97b41460476" kindref="member">ed_set_Hloc_single_N2</ref>(std::complex&lt;double&gt;<sp/>*Hloc,<sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="edipack__cbindings_8h_1a5961b62dc686a7e55cd31b5c8c6ecfc0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a5961b62dc686a7e55cd31b5c8c6ecfc0" kindref="member">ed_set_Hloc_single_N4</ref>(std::complex&lt;double&gt;<sp/>*Hloc,<sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="328" refid="edipack__cbindings_8h_1a283be3d50825229f5ab3bf392055d1d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a283be3d50825229f5ab3bf392055d1d6" kindref="member">ed_set_Hloc_lattice_N2</ref>(std::complex&lt;double&gt;<sp/>*Hloc,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nlat</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="edipack__cbindings_8h_1ac30e88fb7d676fae179e5fe7633b323e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1ac30e88fb7d676fae179e5fe7633b323e" kindref="member">ed_set_Hloc_lattice_N3</ref>(std::complex&lt;double&gt;<sp/>*Hloc,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nlat</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="edipack__cbindings_8h_1ab33d09e46b157b6cbe6bf227afcd3dfb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1ab33d09e46b157b6cbe6bf227afcd3dfb" kindref="member">ed_set_Hloc_lattice_N5</ref>(std::complex&lt;double&gt;<sp/>*Hloc,<sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d,<sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nlat</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="edipack__cbindings_8h_1a4a4e282171f9224f2b4c7a6f2b99c91a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="edipack__cbindings_8h_1a4a4e282171f9224f2b4c7a6f2b99c91a" kindref="member">get_bath_dimension_direct</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="edipack__cbindings_8h_1a037c9d5f278f764549762287e8dbd6f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="edipack__cbindings_8h_1a037c9d5f278f764549762287e8dbd6f4" kindref="member">get_bath_dimension_symmetries</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nsym);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="edipack__cbindings_8h_1ad2555e3d81b856a06099995d4567c213" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1ad2555e3d81b856a06099995d4567c213" kindref="member">search_variable</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*var,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ntmp,<sp/></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*converged</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="edipack__cbindings_8h_1a1f8ed3cd155d62255597f9c3ba9c24cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a1f8ed3cd155d62255597f9c3ba9c24cb" kindref="member">init_Hreplica_symmetries_d3</ref>(std::complex&lt;double&gt;<sp/>*Hvec,<sp/></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d_hvec,<sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lambdavec,<sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d_lambdavec</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="edipack__cbindings_8h_1a11552b7665cedfd16ba0f2d2ef723dd3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a11552b7665cedfd16ba0f2d2ef723dd3" kindref="member">init_Hreplica_symmetries_d5</ref>(std::complex&lt;double&gt;<sp/>*Hvec,<sp/></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d_hvec,<sp/></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lambdavec,<sp/></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d_lambdavec</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="454" refid="edipack__cbindings_8h_1a4ebabefe7a0500b40157ab3070e47113" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a4ebabefe7a0500b40157ab3070e47113" kindref="member">init_Hgeneral_symmetries_d3</ref>(std::complex&lt;double&gt;<sp/>*Hvec,<sp/></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d_hvec,<sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lambdavec,<sp/></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d_lambdavec</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="472" refid="edipack__cbindings_8h_1a3e7598ee215e0b8356479dc45a1ac8cf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a3e7598ee215e0b8356479dc45a1ac8cf" kindref="member">init_Hgeneral_symmetries_d5</ref>(std::complex&lt;double&gt;<sp/>*Hvec,<sp/></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d_hvec,<sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lambdavec,<sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d_lambdavec</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="490" refid="edipack__cbindings_8h_1a4280ad33c4976c7fe778f268ddfc795a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a4280ad33c4976c7fe778f268ddfc795a" kindref="member">init_Hreplica_symmetries_lattice_d3</ref>(std::complex&lt;double&gt;<sp/>*Hvec,<sp/></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d_hvec,<sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lambdavec,<sp/></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d_lambdavec</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="edipack__cbindings_8h_1ab92d5b34812c105c5a9ff8c1360dc40c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1ab92d5b34812c105c5a9ff8c1360dc40c" kindref="member">init_Hreplica_symmetries_lattice_d5</ref>(std::complex&lt;double&gt;<sp/>*Hvec,<sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d_hvec,<sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lambdavec,<sp/></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d_lambdavec</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="edipack__cbindings_8h_1afdaa5cc685ba6e1b9d649e896a7e9a34" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1afdaa5cc685ba6e1b9d649e896a7e9a34" kindref="member">init_Hgeneral_symmetries_lattice_d3</ref>(std::complex&lt;double&gt;<sp/>*Hvec,<sp/></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d_hvec,<sp/></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lambdavec,<sp/></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d_lambdavec</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="545" refid="edipack__cbindings_8h_1a1ce1b29e06a762d53194691cd3cad01d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a1ce1b29e06a762d53194691cd3cad01d" kindref="member">init_Hgeneral_symmetries_lattice_d5</ref>(std::complex&lt;double&gt;<sp/>*Hvec,<sp/></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d_hvec,<sp/></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lambdavec,<sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*d_lambdavec</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="edipack__cbindings_8h_1a058d0915a0ca2c75c7a180f8ebaab313" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a058d0915a0ca2c75c7a180f8ebaab313" kindref="member">break_symmetry_bath_site</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>field,<sp/></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sgn,<sp/></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="584" refid="edipack__cbindings_8h_1a483a3ac9e7b9ae0b428bc56972afdf83" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a483a3ac9e7b9ae0b428bc56972afdf83" kindref="member">break_symmetry_bath_ineq</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>field,<sp/></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*sgn,<sp/></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="602" refid="edipack__cbindings_8h_1aeffc1651b60b982f0c311fbaccb67a07" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1aeffc1651b60b982f0c311fbaccb67a07" kindref="member">spin_symmetrize_bath_site</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="618" refid="edipack__cbindings_8h_1acdfa654baef16d6d55e1a1f5a0e2ca83" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1acdfa654baef16d6d55e1a1f5a0e2ca83" kindref="member">spin_symmetrize_bath_ineq</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="636" refid="edipack__cbindings_8h_1a95a7566dea65925afc93b3bc672f0562" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a95a7566dea65925afc93b3bc672f0562" kindref="member">orb_symmetrize_bath_site</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orb1,<sp/></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orb2,<sp/></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="656" refid="edipack__cbindings_8h_1a20fbd19ce52920cdc33ac756822374fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a20fbd19ce52920cdc33ac756822374fa" kindref="member">orb_symmetrize_bath_ineq</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orb1,<sp/></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orb2,<sp/></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="675" refid="edipack__cbindings_8h_1a43efee593311f6632cc2f4a0b6771104" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a43efee593311f6632cc2f4a0b6771104" kindref="member">orb_equality_bath_site</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indx,<sp/></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="693" refid="edipack__cbindings_8h_1a29411bbaa5094bd0ef7d333964c0c2a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a29411bbaa5094bd0ef7d333964c0c2a2" kindref="member">orb_equality_bath_ineq</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indx,<sp/></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="710" refid="edipack__cbindings_8h_1af66ef6c6420b003adfc940452449db2f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1af66ef6c6420b003adfc940452449db2f" kindref="member">ph_symmetrize_bath_site</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="726" refid="edipack__cbindings_8h_1a42cdb11fb30cef916bd7fca3b25b15a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a42cdb11fb30cef916bd7fca3b25b15a2" kindref="member">ph_symmetrize_bath_ineq</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="741" refid="edipack__cbindings_8h_1af028e818d4c1b75d44632eac97362c62" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1af028e818d4c1b75d44632eac97362c62" kindref="member">save_array_as_bath_site</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="755" refid="edipack__cbindings_8h_1a2881af411d3fa12bddaf3353c0b217be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a2881af411d3fa12bddaf3353c0b217be" kindref="member">save_array_as_bath_ineq</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="777" refid="edipack__cbindings_8h_1a26632202f61533382fc02a28f866c977" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a26632202f61533382fc02a28f866c977" kindref="member">chi2_fitgf_single_normal_n3</ref>(std::complex&lt;double&gt;<sp/>*g,<sp/></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_g,<sp/></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ispin,<sp/></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iorb,<sp/></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fmpi</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="801" refid="edipack__cbindings_8h_1a4e62ca8b208c7974f42b49600ff34010" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a4e62ca8b208c7974f42b49600ff34010" kindref="member">chi2_fitgf_single_normal_n5</ref>(std::complex&lt;double&gt;<sp/>*g,<sp/></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_g,<sp/></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ispin,<sp/></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iorb,<sp/></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fmpi</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="827" refid="edipack__cbindings_8h_1a084045ab718641af450aac6fee89d326" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a084045ab718641af450aac6fee89d326" kindref="member">chi2_fitgf_single_superc_n3</ref>(std::complex&lt;double&gt;<sp/>*g,<sp/></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_g,<sp/></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*f,<sp/></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_f,<sp/></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ispin,<sp/></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iorb,<sp/></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fmpi</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="856" refid="edipack__cbindings_8h_1a958544a4f5f37ca67e4d158e881e1e85" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a958544a4f5f37ca67e4d158e881e1e85" kindref="member">chi2_fitgf_single_superc_n5</ref>(std::complex&lt;double&gt;<sp/>*g,<sp/></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_g,<sp/></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*f,<sp/></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_f,<sp/></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ispin,<sp/></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iorb,<sp/></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fmpi</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="880" refid="edipack__cbindings_8h_1a2daa5a2d780de20446989cb3d382468f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a2daa5a2d780de20446989cb3d382468f" kindref="member">chi2_fitgf_lattice_normal_n3</ref>(std::complex&lt;double&gt;<sp/>*g,<sp/></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_g,<sp/></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ispin</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="900" refid="edipack__cbindings_8h_1ad5721c291688f6a3f2c2b54d4a5b6a9d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1ad5721c291688f6a3f2c2b54d4a5b6a9d" kindref="member">chi2_fitgf_lattice_normal_n4</ref>(std::complex&lt;double&gt;<sp/>*g,<sp/></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_g,<sp/></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ispin</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="920" refid="edipack__cbindings_8h_1a6e1832dd3eb16ae6daa305a8566b0509" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a6e1832dd3eb16ae6daa305a8566b0509" kindref="member">chi2_fitgf_lattice_normal_n6</ref>(std::complex&lt;double&gt;<sp/>*g,<sp/></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_g,<sp/></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ispin</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="943" refid="edipack__cbindings_8h_1a997eae887139ca72483b7a83f148f1b3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a997eae887139ca72483b7a83f148f1b3" kindref="member">chi2_fitgf_lattice_superc_n3</ref>(std::complex&lt;double&gt;<sp/>*g,<sp/></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_g,<sp/></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*f,<sp/></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_f,<sp/></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ispin</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="967" refid="edipack__cbindings_8h_1a771dff566b4147119033e80d1ff5fd08" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a771dff566b4147119033e80d1ff5fd08" kindref="member">chi2_fitgf_lattice_superc_n4</ref>(std::complex&lt;double&gt;<sp/>*g,<sp/></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_g,<sp/></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*f,<sp/></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_f,<sp/></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ispin</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="992" refid="edipack__cbindings_8h_1a95e81b9e2cbeec862c8dc9a7890dfb28" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a95e81b9e2cbeec862c8dc9a7890dfb28" kindref="member">chi2_fitgf_lattice_superc_n6</ref>(std::complex&lt;double&gt;<sp/>*g,<sp/></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_g,<sp/></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*f,<sp/></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_f,<sp/></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ispin</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011" refid="edipack__cbindings_8h_1a2b6b1ef01183279b990c8e2167ec46d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a2b6b1ef01183279b990c8e2167ec46d0" kindref="member">ed_get_dens_n1</ref>(std::complex&lt;double&gt;<sp/>*self);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023" refid="edipack__cbindings_8h_1ad0a0a44e8d638e35187022e3fc327e5a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1ad0a0a44e8d638e35187022e3fc327e5a" kindref="member">ed_get_dens_n2</ref>(std::complex&lt;double&gt;<sp/>*self,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nlat);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034" refid="edipack__cbindings_8h_1a5bcd2c708340e490a44c7065f74b7a22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a5bcd2c708340e490a44c7065f74b7a22" kindref="member">ed_get_mag_n2</ref>(std::complex&lt;double&gt;<sp/>*self);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046" refid="edipack__cbindings_8h_1acecf2aa8df76dd05daac3e0ab4130bde" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1acecf2aa8df76dd05daac3e0ab4130bde" kindref="member">ed_get_mag_n3</ref>(std::complex&lt;double&gt;<sp/>*self,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nlat);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058" refid="edipack__cbindings_8h_1a66c7303f445f80d1a5f7314da45443ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a66c7303f445f80d1a5f7314da45443ab" kindref="member">ed_get_docc_n1</ref>(std::complex&lt;double&gt;<sp/>*self);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070" refid="edipack__cbindings_8h_1af70e3c662b89300177625e0c17a99487" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1af70e3c662b89300177625e0c17a99487" kindref="member">ed_get_docc_n2</ref>(std::complex&lt;double&gt;<sp/>*self,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nlat);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081" refid="edipack__cbindings_8h_1aa230869e737df0eaea8c637245cb4f27" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1aa230869e737df0eaea8c637245cb4f27" kindref="member">ed_get_phisc_n2</ref>(std::complex&lt;double&gt;<sp/>*self);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093" refid="edipack__cbindings_8h_1ae392ef82d75dcfcf07bfe713c9d464be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1ae392ef82d75dcfcf07bfe713c9d464be" kindref="member">ed_get_phisc_n3</ref>(std::complex&lt;double&gt;<sp/>*self,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nlat);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106" refid="edipack__cbindings_8h_1a6d8605dadc81aed472d91f51965d8528" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a6d8605dadc81aed472d91f51965d8528" kindref="member">ed_get_argsc_n2</ref>(std::complex&lt;double&gt;<sp/>*self);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118" refid="edipack__cbindings_8h_1a7013e1ed2774ea454559cef7a5549026" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a7013e1ed2774ea454559cef7a5549026" kindref="member">ed_get_argsc_n3</ref>(std::complex&lt;double&gt;<sp/>*self,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nlat);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1131" refid="edipack__cbindings_8h_1a754ad281eb2101af1f663cb9e053e556" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a754ad281eb2101af1f663cb9e053e556" kindref="member">ed_get_eimp_n1</ref>(std::complex&lt;double&gt;<sp/>*self);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143" refid="edipack__cbindings_8h_1a33ec4c9346f2a9ef3902160dc14def3f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a33ec4c9346f2a9ef3902160dc14def3f" kindref="member">ed_get_eimp_n2</ref>(std::complex&lt;double&gt;<sp/>*self,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nlat);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159" refid="edipack__cbindings_8h_1add11fccccf8a834454ab898f164d15d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1add11fccccf8a834454ab898f164d15d0" kindref="member">get_sigma_site_n3</ref>(std::complex&lt;double&gt;<sp/>*self,<sp/></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>axis,<sp/></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typ,<sp/></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*zeta,<sp/></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dz,<sp/></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zflag</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1180" refid="edipack__cbindings_8h_1adee20b777829ac3b91047e8b85ca43fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1adee20b777829ac3b91047e8b85ca43fd" kindref="member">get_sigma_site_n5</ref>(std::complex&lt;double&gt;<sp/>*self,<sp/></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>axis,<sp/></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typ,<sp/></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*zeta,<sp/></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dz,<sp/></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zflag</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202" refid="edipack__cbindings_8h_1a3bc24f41672c726dfe1eaebed6aecd1b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a3bc24f41672c726dfe1eaebed6aecd1b" kindref="member">get_sigma_lattice_n3</ref>(std::complex&lt;double&gt;<sp/>*self,<sp/></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nineq,<sp/></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>axis,<sp/></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typ,<sp/></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*zeta,<sp/></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dz,<sp/></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zflag</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1225" refid="edipack__cbindings_8h_1a8a33eee86057164c44ead3cf9bbdb5a1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a8a33eee86057164c44ead3cf9bbdb5a1" kindref="member">get_sigma_lattice_n4</ref>(std::complex&lt;double&gt;<sp/>*self,<sp/></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nineq,<sp/></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>axis,<sp/></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typ,<sp/></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*zeta,<sp/></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dz,<sp/></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zflag</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1248" refid="edipack__cbindings_8h_1a8a0f7f96cd75fca91c9b3cbe879bf138" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a8a0f7f96cd75fca91c9b3cbe879bf138" kindref="member">get_sigma_lattice_n6</ref>(std::complex&lt;double&gt;<sp/>*self,<sp/></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nineq,<sp/></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>axis,<sp/></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typ,<sp/></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*zeta,<sp/></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dz,<sp/></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zflag</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270" refid="edipack__cbindings_8h_1a6f46b952858a987d1877afcf3d253ed9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a6f46b952858a987d1877afcf3d253ed9" kindref="member">get_gimp_site_n3</ref>(std::complex&lt;double&gt;<sp/>*gimp,<sp/></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>axis,<sp/></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typ,<sp/></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*zeta,<sp/></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dz,<sp/></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zflag</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1292" refid="edipack__cbindings_8h_1a813f72b7d06edfb9b0da540572540892" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a813f72b7d06edfb9b0da540572540892" kindref="member">get_gimp_site_n5</ref>(std::complex&lt;double&gt;<sp/>*gimp,<sp/></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>axis,<sp/></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typ,<sp/></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*zeta,<sp/></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dz,<sp/></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zflag</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314" refid="edipack__cbindings_8h_1ae41a3177c46943b9da8501f2dbc44a26" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1ae41a3177c46943b9da8501f2dbc44a26" kindref="member">get_gimp_lattice_n3</ref>(std::complex&lt;double&gt;<sp/>*gimp,<sp/></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nineq,<sp/></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>axis,<sp/></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typ,<sp/></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*zeta,<sp/></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dz,<sp/></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zflag</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1337" refid="edipack__cbindings_8h_1a016c1050ca09b251ec9d855aa8b11639" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a016c1050ca09b251ec9d855aa8b11639" kindref="member">get_gimp_lattice_n4</ref>(std::complex&lt;double&gt;<sp/>*gimp,<sp/></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nineq,<sp/></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>axis,<sp/></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typ,<sp/></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*zeta,<sp/></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dz,<sp/></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zflag</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1360" refid="edipack__cbindings_8h_1a9f5109244481b5eb4bf4499bd43c87a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a9f5109244481b5eb4bf4499bd43c87a3" kindref="member">get_gimp_lattice_n6</ref>(std::complex&lt;double&gt;<sp/>*gimp,<sp/></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nineq,<sp/></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>axis,<sp/></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typ,<sp/></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*zeta,<sp/></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dz,<sp/></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zflag</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386" refid="edipack__cbindings_8h_1a4b0d3ecb1622e1189cb91e5e749dc3f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a4b0d3ecb1622e1189cb91e5e749dc3f7" kindref="member">get_g0and_n3</ref>(std::complex&lt;double&gt;<sp/>*warray,<sp/></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_warray,<sp/></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim_bath,<sp/></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*G0and,<sp/></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_g0and,<sp/></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*axis,<sp/></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*typ</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1411" refid="edipack__cbindings_8h_1ae527ec14f7dd141aa130c5e3c7845044" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1ae527ec14f7dd141aa130c5e3c7845044" kindref="member">get_g0and_n5</ref>(std::complex&lt;double&gt;<sp/>*warray,</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_warray,<sp/></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim_bath,<sp/></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*G0and,<sp/></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_g0and,<sp/></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*axis<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*typ<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437" refid="edipack__cbindings_8h_1abbf88fd534eb6d4ebd16c9a13a520bf8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1abbf88fd534eb6d4ebd16c9a13a520bf8" kindref="member">get_delta_n3</ref>(std::complex&lt;double&gt;<sp/>*warray,<sp/></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_warray,<sp/></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim_bath,<sp/></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*Delta,<sp/></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_delta,<sp/></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*axis,<sp/></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*typ</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1463" refid="edipack__cbindings_8h_1a5c836330014575863b47cd02f5732921" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a5c836330014575863b47cd02f5732921" kindref="member">get_delta_n5</ref>(std::complex&lt;double&gt;<sp/>*warray,<sp/></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_warray,<sp/></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim_bath,<sp/></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*Delta,<sp/></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_delta,<sp/></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*axis,<sp/></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*typ</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487" refid="edipack__cbindings_8h_1a1bbc84998265830bba253f3e12c4c46a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a1bbc84998265830bba253f3e12c4c46a" kindref="member">ed_get_spinchi</ref>(std::complex&lt;double&gt;<sp/>*self,<sp/></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*zeta,<sp/></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim_zeta,<sp/></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zetaflag,<sp/></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*axis,<sp/></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nsites,<sp/></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>latticeflag</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1509" refid="edipack__cbindings_8h_1aee84493a7c0a6c59d0eb9af4a061d70f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1aee84493a7c0a6c59d0eb9af4a061d70f" kindref="member">ed_get_denschi</ref>(std::complex&lt;double&gt;<sp/>*self,<sp/></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*zeta,<sp/></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim_zeta,<sp/></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zetaflag,<sp/></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*axis,<sp/></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nsites,<sp/></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>latticeflag</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1532" refid="edipack__cbindings_8h_1a127a97bde10877bcf6449f6ee6d746f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a127a97bde10877bcf6449f6ee6d746f0" kindref="member">ed_get_pairchi</ref>(std::complex&lt;double&gt;<sp/>*self,<sp/></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*zeta,<sp/></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim_zeta,<sp/></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zetaflag,<sp/></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*axis,<sp/></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nsites,<sp/></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>latticeflag</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1554" refid="edipack__cbindings_8h_1a3ecaa46122433e2b4e27642e22c268ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a3ecaa46122433e2b4e27642e22c268ff" kindref="member">ed_get_exctchi</ref>(std::complex&lt;double&gt;<sp/>*self,<sp/></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>*zeta,<sp/></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim_zeta,<sp/></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zetaflag,<sp/></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*axis,<sp/></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nsites,<sp/></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>latticeflag</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571" refid="edipack__cbindings_8h_1aa02f534a27d00248fb7d39e0b8ed4370" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1aa02f534a27d00248fb7d39e0b8ed4370" kindref="member">ed_get_impurity_rdm</ref>(std::complex&lt;double&gt;<sp/>*rdm,<sp/></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>doprint</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584" refid="edipack__cbindings_8h_1aa0543855d50d9c185f775a7b76da1513" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1aa0543855d50d9c185f775a7b76da1513" kindref="member">init_solver_site</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/>int64_t<sp/>*dim_bath);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593" refid="edipack__cbindings_8h_1a35f4d29a883dfdcc79694379a669dc90" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a35f4d29a883dfdcc79694379a669dc90" kindref="member">init_solver_site_nobath</ref>();</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604" refid="edipack__cbindings_8h_1a6da397dbec73ae892da59e871def29ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a6da397dbec73ae892da59e871def29ee" kindref="member">init_solver_ineq</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/>int64_t<sp/>*dim_bath);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1615" refid="edipack__cbindings_8h_1a92261024c664083ab0ce5193116a12ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a92261024c664083ab0ce5193116a12ed" kindref="member">init_solver_ineq_nobath</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nlat);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628" refid="edipack__cbindings_8h_1a6dcfbd68701667f8da751170aadb0bdd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a6dcfbd68701667f8da751170aadb0bdd" kindref="member">solve_site</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_gf,<sp/></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_mpi</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1644" refid="edipack__cbindings_8h_1a0853cd41df669d0431fa1152b90f4c2a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a0853cd41df669d0431fa1152b90f4c2a" kindref="member">solve_site_nobath</ref>(</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_gf,<sp/></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_mpi</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1660" refid="edipack__cbindings_8h_1abd975dfeb634565f628804c906e6bc83" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1abd975dfeb634565f628804c906e6bc83" kindref="member">solve_ineq</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bath,<sp/></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*dim_bath,<sp/></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_gf,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mpi_lanc<sp/></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677" refid="edipack__cbindings_8h_1a6cd2db7bcf757c8733b5e809a417eba1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a6cd2db7bcf757c8733b5e809a417eba1" kindref="member">solve_ineq_nobath</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nlat,<sp/></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_gf,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mpi_lanc<sp/></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689" refid="edipack__cbindings_8h_1aba47dd81d35d1e85d853b0088e5bc8b3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1aba47dd81d35d1e85d853b0088e5bc8b3" kindref="member">finalize_solver</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nineq);</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697" refid="edipack__cbindings_8h_1a33360610df2e7782f542c5857c1228ca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a33360610df2e7782f542c5857c1228ca" kindref="member">reset_umatrix</ref>();</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1714" refid="edipack__cbindings_8h_1a541e2df14244cfcf0c56b09142e2e350" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="edipack__cbindings_8h_1a541e2df14244cfcf0c56b09142e2e350" kindref="member">add_twobody_operator</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>o1,</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s1,</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>o2,</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s2,</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>o3,</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s3,</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>o4,</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s4,</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>U</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/EDIpack/EDIpack/src/c_bindings/edipack_cbindings.h"/>
  </compounddef>
</doxygen>
