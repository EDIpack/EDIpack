name: CI EDIpack test workflow

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

defaults:
  run:
    shell: bash -l {0}

jobs:
  test-EDIpack:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-14]

    steps:

#********* SETUP PART **********

# Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main

# EDIpack setup
      - uses: EDIpack/TestSetup@master
        with:
          pack-type: open

#********* BUILD PART **********

# Build SciFortran
      - name: Cloning SciFortran
        run: git clone https://github.com/scifortran/SciFortran.git scifor

      - name: Install SciFortran
        run: scifor/bin/ci_setup_scifor.sh

# Build EDIpack
      - name: Cloning EDIpack (same branch as triggering one, fallback to master)
        run: |
          BRANCH="${GITHUB_REF_NAME}"
          echo "Trying to clone EDIpack on branch: $BRANCH"
          if git ls-remote --heads https://github.com/edipack/EDIpack.git "$BRANCH" | grep -q "$BRANCH"; then
            git clone --branch "$BRANCH" --single-branch https://github.com/edipack/EDIpack.git edipack
          else
            echo "Branch '$BRANCH' not found in edipack repo, falling back to 'master'"
            git clone --branch master --single-branch https://github.com/edipack/EDIpack.git edipack
          fi

      - name: Install EDIpack
        run: |
          source ~/.scifor_config_user
          export PKG_CONFIG_PATH=~/.pkgconfig.d
          export GLOB_INC=$( pkg-config --cflags scifor )
          export GLOB_LIB=$( pkg-config --libs   scifor  | sed  "s/;/ /g"  | sed 's/\\/  /g' )
          edipack/bin/ci_setup_edipack.sh



#******** TESTING PART ********

# Testing
      - name: Building tests
        run:  |
          source ~/.scifor_config_user
          source ~/.edipack_config_user
          export PKG_CONFIG_PATH=~/.pkgconfig.d
          export GLOB_INC=$( pkg-config --cflags scifor edipack)
          export GLOB_LIB=$( pkg-config --libs   scifor edipack | sed  "s/;/ /g"  | sed 's/\\/  /g' )
          cd edipack/test
          export TERM=xterm
          make all

      - name: Testing...
        run: |
          source ~/.scifor_config_user
          source ~/.edipack_config_user
          export PKG_CONFIG_PATH=~/.pkgconfig.d
          export GLOB_INC=$( pkg-config --cflags scifor edipack)
          export GLOB_LIB=$( pkg-config --libs   scifor edipack | sed  "s/;/ /g"  | sed 's/\\/  /g' )
          cd edipack/test
          make test

      # - name: Install LCOV
      #   if: contains( matrix.os, 'ubuntu')
      #   run: |
      #     sudo apt-get install lcov

      # - name: Create coverage report
      #   if: contains( matrix.os, 'ubuntu')
      #   run: |
      #     mkdir -p ${{ env.COV_DIR }}
      #     lcov --capture --initial --base-directory . --directory test/ --output-file ${{ env.COV_DIR }}/coverage.base
      #     lcov --capture --base-directory . --directory test/ --output-file ${{ env.COV_DIR }}/coverage.capture
      #     lcov --add-tracefile ${{ env.COV_DIR }}/coverage.base --add-tracefile ${{ env.COV_DIR }}/coverage.capture --output-file ${{ env.COV_DIR }}/coverage.info
      #   env:
      #     COV_DIR: test/coverage

      # - name: Upload coverage report to CODECOV
      #   if: contains( matrix.os, 'ubuntu')
      #   uses: codecov/codecov-action@v3
      #   with:
      #     files: test/coverage/coverage.info
